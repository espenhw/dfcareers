// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BasicApi.proto

package dfproto;

public final class BasicApi {
  private BasicApi() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface GetWorldInfoOutOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // required .dfproto.GetWorldInfoOut.Mode mode = 1;
    boolean hasMode();
    dfproto.BasicApi.GetWorldInfoOut.Mode getMode();
    
    // required string save_dir = 2;
    boolean hasSaveDir();
    String getSaveDir();
    
    // optional .dfproto.NameInfo world_name = 3;
    boolean hasWorldName();
    dfproto.Basic.NameInfo getWorldName();
    
    // optional int32 civ_id = 4;
    boolean hasCivId();
    int getCivId();
    
    // optional int32 site_id = 5;
    boolean hasSiteId();
    int getSiteId();
    
    // optional int32 group_id = 6;
    boolean hasGroupId();
    int getGroupId();
    
    // optional int32 race_id = 7;
    boolean hasRaceId();
    int getRaceId();
    
    // optional int32 player_unit_id = 8;
    boolean hasPlayerUnitId();
    int getPlayerUnitId();
    
    // optional int32 player_histfig_id = 9;
    boolean hasPlayerHistfigId();
    int getPlayerHistfigId();
    
    // repeated int32 companion_histfig_ids = 10;
    java.util.List<java.lang.Integer> getCompanionHistfigIdsList();
    int getCompanionHistfigIdsCount();
    int getCompanionHistfigIds(int index);
  }
  public static final class GetWorldInfoOut extends
      com.google.protobuf.GeneratedMessageLite
      implements GetWorldInfoOutOrBuilder {
    // Use GetWorldInfoOut.newBuilder() to construct.
    private GetWorldInfoOut(Builder builder) {
      super(builder);
    }
    private GetWorldInfoOut(boolean noInit) {}
    
    private static final GetWorldInfoOut defaultInstance;
    public static GetWorldInfoOut getDefaultInstance() {
      return defaultInstance;
    }
    
    public GetWorldInfoOut getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public enum Mode
        implements com.google.protobuf.Internal.EnumLite {
      MODE_DWARF(0, 1),
      MODE_ADVENTURE(1, 2),
      MODE_LEGENDS(2, 3),
      ;
      
      public static final int MODE_DWARF_VALUE = 1;
      public static final int MODE_ADVENTURE_VALUE = 2;
      public static final int MODE_LEGENDS_VALUE = 3;
      
      
      public final int getNumber() { return value; }
      
      public static Mode valueOf(int value) {
        switch (value) {
          case 1: return MODE_DWARF;
          case 2: return MODE_ADVENTURE;
          case 3: return MODE_LEGENDS;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<Mode>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Mode>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Mode>() {
              public Mode findValueByNumber(int number) {
                return Mode.valueOf(number);
              }
            };
      
      private final int value;
      
      private Mode(int index, int value) {
        this.value = value;
      }
      
      // @@protoc_insertion_point(enum_scope:dfproto.GetWorldInfoOut.Mode)
    }
    
    private int bitField0_;
    // required .dfproto.GetWorldInfoOut.Mode mode = 1;
    public static final int MODE_FIELD_NUMBER = 1;
    private dfproto.BasicApi.GetWorldInfoOut.Mode mode_;
    public boolean hasMode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public dfproto.BasicApi.GetWorldInfoOut.Mode getMode() {
      return mode_;
    }
    
    // required string save_dir = 2;
    public static final int SAVE_DIR_FIELD_NUMBER = 2;
    private java.lang.Object saveDir_;
    public boolean hasSaveDir() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getSaveDir() {
      java.lang.Object ref = saveDir_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          saveDir_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getSaveDirBytes() {
      java.lang.Object ref = saveDir_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        saveDir_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional .dfproto.NameInfo world_name = 3;
    public static final int WORLD_NAME_FIELD_NUMBER = 3;
    private dfproto.Basic.NameInfo worldName_;
    public boolean hasWorldName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public dfproto.Basic.NameInfo getWorldName() {
      return worldName_;
    }
    
    // optional int32 civ_id = 4;
    public static final int CIV_ID_FIELD_NUMBER = 4;
    private int civId_;
    public boolean hasCivId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getCivId() {
      return civId_;
    }
    
    // optional int32 site_id = 5;
    public static final int SITE_ID_FIELD_NUMBER = 5;
    private int siteId_;
    public boolean hasSiteId() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getSiteId() {
      return siteId_;
    }
    
    // optional int32 group_id = 6;
    public static final int GROUP_ID_FIELD_NUMBER = 6;
    private int groupId_;
    public boolean hasGroupId() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getGroupId() {
      return groupId_;
    }
    
    // optional int32 race_id = 7;
    public static final int RACE_ID_FIELD_NUMBER = 7;
    private int raceId_;
    public boolean hasRaceId() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public int getRaceId() {
      return raceId_;
    }
    
    // optional int32 player_unit_id = 8;
    public static final int PLAYER_UNIT_ID_FIELD_NUMBER = 8;
    private int playerUnitId_;
    public boolean hasPlayerUnitId() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public int getPlayerUnitId() {
      return playerUnitId_;
    }
    
    // optional int32 player_histfig_id = 9;
    public static final int PLAYER_HISTFIG_ID_FIELD_NUMBER = 9;
    private int playerHistfigId_;
    public boolean hasPlayerHistfigId() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public int getPlayerHistfigId() {
      return playerHistfigId_;
    }
    
    // repeated int32 companion_histfig_ids = 10;
    public static final int COMPANION_HISTFIG_IDS_FIELD_NUMBER = 10;
    private java.util.List<java.lang.Integer> companionHistfigIds_;
    public java.util.List<java.lang.Integer>
        getCompanionHistfigIdsList() {
      return companionHistfigIds_;
    }
    public int getCompanionHistfigIdsCount() {
      return companionHistfigIds_.size();
    }
    public int getCompanionHistfigIds(int index) {
      return companionHistfigIds_.get(index);
    }
    
    private void initFields() {
      mode_ = dfproto.BasicApi.GetWorldInfoOut.Mode.MODE_DWARF;
      saveDir_ = "";
      worldName_ = dfproto.Basic.NameInfo.getDefaultInstance();
      civId_ = 0;
      siteId_ = 0;
      groupId_ = 0;
      raceId_ = 0;
      playerUnitId_ = 0;
      playerHistfigId_ = 0;
      companionHistfigIds_ = java.util.Collections.emptyList();;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasMode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSaveDir()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, mode_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getSaveDirBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, worldName_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, civId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, siteId_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, groupId_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, raceId_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, playerUnitId_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, playerHistfigId_);
      }
      for (int i = 0; i < companionHistfigIds_.size(); i++) {
        output.writeInt32(10, companionHistfigIds_.get(i));
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, mode_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getSaveDirBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, worldName_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, civId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, siteId_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, groupId_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, raceId_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, playerUnitId_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, playerHistfigId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < companionHistfigIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(companionHistfigIds_.get(i));
        }
        size += dataSize;
        size += 1 * getCompanionHistfigIdsList().size();
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static dfproto.BasicApi.GetWorldInfoOut parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static dfproto.BasicApi.GetWorldInfoOut parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static dfproto.BasicApi.GetWorldInfoOut parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static dfproto.BasicApi.GetWorldInfoOut parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static dfproto.BasicApi.GetWorldInfoOut parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static dfproto.BasicApi.GetWorldInfoOut parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static dfproto.BasicApi.GetWorldInfoOut parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static dfproto.BasicApi.GetWorldInfoOut parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static dfproto.BasicApi.GetWorldInfoOut parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static dfproto.BasicApi.GetWorldInfoOut parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(dfproto.BasicApi.GetWorldInfoOut prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          dfproto.BasicApi.GetWorldInfoOut, Builder>
        implements dfproto.BasicApi.GetWorldInfoOutOrBuilder {
      // Construct using dfproto.BasicApi.GetWorldInfoOut.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        mode_ = dfproto.BasicApi.GetWorldInfoOut.Mode.MODE_DWARF;
        bitField0_ = (bitField0_ & ~0x00000001);
        saveDir_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        worldName_ = dfproto.Basic.NameInfo.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000004);
        civId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        siteId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        groupId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        raceId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        playerUnitId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        playerHistfigId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        companionHistfigIds_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public dfproto.BasicApi.GetWorldInfoOut getDefaultInstanceForType() {
        return dfproto.BasicApi.GetWorldInfoOut.getDefaultInstance();
      }
      
      public dfproto.BasicApi.GetWorldInfoOut build() {
        dfproto.BasicApi.GetWorldInfoOut result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private dfproto.BasicApi.GetWorldInfoOut buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        dfproto.BasicApi.GetWorldInfoOut result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public dfproto.BasicApi.GetWorldInfoOut buildPartial() {
        dfproto.BasicApi.GetWorldInfoOut result = new dfproto.BasicApi.GetWorldInfoOut(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.mode_ = mode_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.saveDir_ = saveDir_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.worldName_ = worldName_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.civId_ = civId_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.siteId_ = siteId_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.groupId_ = groupId_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.raceId_ = raceId_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.playerUnitId_ = playerUnitId_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.playerHistfigId_ = playerHistfigId_;
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          companionHistfigIds_ = java.util.Collections.unmodifiableList(companionHistfigIds_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.companionHistfigIds_ = companionHistfigIds_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(dfproto.BasicApi.GetWorldInfoOut other) {
        if (other == dfproto.BasicApi.GetWorldInfoOut.getDefaultInstance()) return this;
        if (other.hasMode()) {
          setMode(other.getMode());
        }
        if (other.hasSaveDir()) {
          setSaveDir(other.getSaveDir());
        }
        if (other.hasWorldName()) {
          mergeWorldName(other.getWorldName());
        }
        if (other.hasCivId()) {
          setCivId(other.getCivId());
        }
        if (other.hasSiteId()) {
          setSiteId(other.getSiteId());
        }
        if (other.hasGroupId()) {
          setGroupId(other.getGroupId());
        }
        if (other.hasRaceId()) {
          setRaceId(other.getRaceId());
        }
        if (other.hasPlayerUnitId()) {
          setPlayerUnitId(other.getPlayerUnitId());
        }
        if (other.hasPlayerHistfigId()) {
          setPlayerHistfigId(other.getPlayerHistfigId());
        }
        if (!other.companionHistfigIds_.isEmpty()) {
          if (companionHistfigIds_.isEmpty()) {
            companionHistfigIds_ = other.companionHistfigIds_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureCompanionHistfigIdsIsMutable();
            companionHistfigIds_.addAll(other.companionHistfigIds_);
          }
          
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasMode()) {
          
          return false;
        }
        if (!hasSaveDir()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              dfproto.BasicApi.GetWorldInfoOut.Mode value = dfproto.BasicApi.GetWorldInfoOut.Mode.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000001;
                mode_ = value;
              }
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              saveDir_ = input.readBytes();
              break;
            }
            case 26: {
              dfproto.Basic.NameInfo.Builder subBuilder = dfproto.Basic.NameInfo.newBuilder();
              if (hasWorldName()) {
                subBuilder.mergeFrom(getWorldName());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setWorldName(subBuilder.buildPartial());
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              civId_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              siteId_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              groupId_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              raceId_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              playerUnitId_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              playerHistfigId_ = input.readInt32();
              break;
            }
            case 80: {
              ensureCompanionHistfigIdsIsMutable();
              companionHistfigIds_.add(input.readInt32());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addCompanionHistfigIds(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .dfproto.GetWorldInfoOut.Mode mode = 1;
      private dfproto.BasicApi.GetWorldInfoOut.Mode mode_ = dfproto.BasicApi.GetWorldInfoOut.Mode.MODE_DWARF;
      public boolean hasMode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public dfproto.BasicApi.GetWorldInfoOut.Mode getMode() {
        return mode_;
      }
      public Builder setMode(dfproto.BasicApi.GetWorldInfoOut.Mode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        mode_ = value;
        
        return this;
      }
      public Builder clearMode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        mode_ = dfproto.BasicApi.GetWorldInfoOut.Mode.MODE_DWARF;
        
        return this;
      }
      
      // required string save_dir = 2;
      private java.lang.Object saveDir_ = "";
      public boolean hasSaveDir() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getSaveDir() {
        java.lang.Object ref = saveDir_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          saveDir_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setSaveDir(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        saveDir_ = value;
        
        return this;
      }
      public Builder clearSaveDir() {
        bitField0_ = (bitField0_ & ~0x00000002);
        saveDir_ = getDefaultInstance().getSaveDir();
        
        return this;
      }
      void setSaveDir(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        saveDir_ = value;
        
      }
      
      // optional .dfproto.NameInfo world_name = 3;
      private dfproto.Basic.NameInfo worldName_ = dfproto.Basic.NameInfo.getDefaultInstance();
      public boolean hasWorldName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public dfproto.Basic.NameInfo getWorldName() {
        return worldName_;
      }
      public Builder setWorldName(dfproto.Basic.NameInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        worldName_ = value;
        
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder setWorldName(
          dfproto.Basic.NameInfo.Builder builderForValue) {
        worldName_ = builderForValue.build();
        
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder mergeWorldName(dfproto.Basic.NameInfo value) {
        if (((bitField0_ & 0x00000004) == 0x00000004) &&
            worldName_ != dfproto.Basic.NameInfo.getDefaultInstance()) {
          worldName_ =
            dfproto.Basic.NameInfo.newBuilder(worldName_).mergeFrom(value).buildPartial();
        } else {
          worldName_ = value;
        }
        
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder clearWorldName() {
        worldName_ = dfproto.Basic.NameInfo.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      // optional int32 civ_id = 4;
      private int civId_ ;
      public boolean hasCivId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getCivId() {
        return civId_;
      }
      public Builder setCivId(int value) {
        bitField0_ |= 0x00000008;
        civId_ = value;
        
        return this;
      }
      public Builder clearCivId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        civId_ = 0;
        
        return this;
      }
      
      // optional int32 site_id = 5;
      private int siteId_ ;
      public boolean hasSiteId() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getSiteId() {
        return siteId_;
      }
      public Builder setSiteId(int value) {
        bitField0_ |= 0x00000010;
        siteId_ = value;
        
        return this;
      }
      public Builder clearSiteId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        siteId_ = 0;
        
        return this;
      }
      
      // optional int32 group_id = 6;
      private int groupId_ ;
      public boolean hasGroupId() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getGroupId() {
        return groupId_;
      }
      public Builder setGroupId(int value) {
        bitField0_ |= 0x00000020;
        groupId_ = value;
        
        return this;
      }
      public Builder clearGroupId() {
        bitField0_ = (bitField0_ & ~0x00000020);
        groupId_ = 0;
        
        return this;
      }
      
      // optional int32 race_id = 7;
      private int raceId_ ;
      public boolean hasRaceId() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public int getRaceId() {
        return raceId_;
      }
      public Builder setRaceId(int value) {
        bitField0_ |= 0x00000040;
        raceId_ = value;
        
        return this;
      }
      public Builder clearRaceId() {
        bitField0_ = (bitField0_ & ~0x00000040);
        raceId_ = 0;
        
        return this;
      }
      
      // optional int32 player_unit_id = 8;
      private int playerUnitId_ ;
      public boolean hasPlayerUnitId() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public int getPlayerUnitId() {
        return playerUnitId_;
      }
      public Builder setPlayerUnitId(int value) {
        bitField0_ |= 0x00000080;
        playerUnitId_ = value;
        
        return this;
      }
      public Builder clearPlayerUnitId() {
        bitField0_ = (bitField0_ & ~0x00000080);
        playerUnitId_ = 0;
        
        return this;
      }
      
      // optional int32 player_histfig_id = 9;
      private int playerHistfigId_ ;
      public boolean hasPlayerHistfigId() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public int getPlayerHistfigId() {
        return playerHistfigId_;
      }
      public Builder setPlayerHistfigId(int value) {
        bitField0_ |= 0x00000100;
        playerHistfigId_ = value;
        
        return this;
      }
      public Builder clearPlayerHistfigId() {
        bitField0_ = (bitField0_ & ~0x00000100);
        playerHistfigId_ = 0;
        
        return this;
      }
      
      // repeated int32 companion_histfig_ids = 10;
      private java.util.List<java.lang.Integer> companionHistfigIds_ = java.util.Collections.emptyList();;
      private void ensureCompanionHistfigIdsIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          companionHistfigIds_ = new java.util.ArrayList<java.lang.Integer>(companionHistfigIds_);
          bitField0_ |= 0x00000200;
         }
      }
      public java.util.List<java.lang.Integer>
          getCompanionHistfigIdsList() {
        return java.util.Collections.unmodifiableList(companionHistfigIds_);
      }
      public int getCompanionHistfigIdsCount() {
        return companionHistfigIds_.size();
      }
      public int getCompanionHistfigIds(int index) {
        return companionHistfigIds_.get(index);
      }
      public Builder setCompanionHistfigIds(
          int index, int value) {
        ensureCompanionHistfigIdsIsMutable();
        companionHistfigIds_.set(index, value);
        
        return this;
      }
      public Builder addCompanionHistfigIds(int value) {
        ensureCompanionHistfigIdsIsMutable();
        companionHistfigIds_.add(value);
        
        return this;
      }
      public Builder addAllCompanionHistfigIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCompanionHistfigIdsIsMutable();
        super.addAll(values, companionHistfigIds_);
        
        return this;
      }
      public Builder clearCompanionHistfigIds() {
        companionHistfigIds_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000200);
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:dfproto.GetWorldInfoOut)
    }
    
    static {
      defaultInstance = new GetWorldInfoOut(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:dfproto.GetWorldInfoOut)
  }
  
  public interface ListEnumsOutOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // repeated .dfproto.EnumItemName material_flags = 1;
    java.util.List<dfproto.Basic.EnumItemName> 
        getMaterialFlagsList();
    dfproto.Basic.EnumItemName getMaterialFlags(int index);
    int getMaterialFlagsCount();
    
    // repeated .dfproto.EnumItemName inorganic_flags = 2;
    java.util.List<dfproto.Basic.EnumItemName> 
        getInorganicFlagsList();
    dfproto.Basic.EnumItemName getInorganicFlags(int index);
    int getInorganicFlagsCount();
    
    // repeated .dfproto.EnumItemName unit_flags1 = 3;
    java.util.List<dfproto.Basic.EnumItemName> 
        getUnitFlags1List();
    dfproto.Basic.EnumItemName getUnitFlags1(int index);
    int getUnitFlags1Count();
    
    // repeated .dfproto.EnumItemName unit_flags2 = 4;
    java.util.List<dfproto.Basic.EnumItemName> 
        getUnitFlags2List();
    dfproto.Basic.EnumItemName getUnitFlags2(int index);
    int getUnitFlags2Count();
    
    // repeated .dfproto.EnumItemName unit_flags3 = 5;
    java.util.List<dfproto.Basic.EnumItemName> 
        getUnitFlags3List();
    dfproto.Basic.EnumItemName getUnitFlags3(int index);
    int getUnitFlags3Count();
    
    // repeated .dfproto.EnumItemName unit_labor = 6;
    java.util.List<dfproto.Basic.EnumItemName> 
        getUnitLaborList();
    dfproto.Basic.EnumItemName getUnitLabor(int index);
    int getUnitLaborCount();
    
    // repeated .dfproto.EnumItemName job_skill = 7;
    java.util.List<dfproto.Basic.EnumItemName> 
        getJobSkillList();
    dfproto.Basic.EnumItemName getJobSkill(int index);
    int getJobSkillCount();
    
    // repeated .dfproto.EnumItemName cie_add_tag_mask1 = 8;
    java.util.List<dfproto.Basic.EnumItemName> 
        getCieAddTagMask1List();
    dfproto.Basic.EnumItemName getCieAddTagMask1(int index);
    int getCieAddTagMask1Count();
    
    // repeated .dfproto.EnumItemName cie_add_tag_mask2 = 9;
    java.util.List<dfproto.Basic.EnumItemName> 
        getCieAddTagMask2List();
    dfproto.Basic.EnumItemName getCieAddTagMask2(int index);
    int getCieAddTagMask2Count();
    
    // repeated .dfproto.EnumItemName death_info_flags = 10;
    java.util.List<dfproto.Basic.EnumItemName> 
        getDeathInfoFlagsList();
    dfproto.Basic.EnumItemName getDeathInfoFlags(int index);
    int getDeathInfoFlagsCount();
    
    // repeated .dfproto.EnumItemName profession = 11;
    java.util.List<dfproto.Basic.EnumItemName> 
        getProfessionList();
    dfproto.Basic.EnumItemName getProfession(int index);
    int getProfessionCount();
  }
  public static final class ListEnumsOut extends
      com.google.protobuf.GeneratedMessageLite
      implements ListEnumsOutOrBuilder {
    // Use ListEnumsOut.newBuilder() to construct.
    private ListEnumsOut(Builder builder) {
      super(builder);
    }
    private ListEnumsOut(boolean noInit) {}
    
    private static final ListEnumsOut defaultInstance;
    public static ListEnumsOut getDefaultInstance() {
      return defaultInstance;
    }
    
    public ListEnumsOut getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    // repeated .dfproto.EnumItemName material_flags = 1;
    public static final int MATERIAL_FLAGS_FIELD_NUMBER = 1;
    private java.util.List<dfproto.Basic.EnumItemName> materialFlags_;
    public java.util.List<dfproto.Basic.EnumItemName> getMaterialFlagsList() {
      return materialFlags_;
    }
    public java.util.List<? extends dfproto.Basic.EnumItemNameOrBuilder> 
        getMaterialFlagsOrBuilderList() {
      return materialFlags_;
    }
    public int getMaterialFlagsCount() {
      return materialFlags_.size();
    }
    public dfproto.Basic.EnumItemName getMaterialFlags(int index) {
      return materialFlags_.get(index);
    }
    public dfproto.Basic.EnumItemNameOrBuilder getMaterialFlagsOrBuilder(
        int index) {
      return materialFlags_.get(index);
    }
    
    // repeated .dfproto.EnumItemName inorganic_flags = 2;
    public static final int INORGANIC_FLAGS_FIELD_NUMBER = 2;
    private java.util.List<dfproto.Basic.EnumItemName> inorganicFlags_;
    public java.util.List<dfproto.Basic.EnumItemName> getInorganicFlagsList() {
      return inorganicFlags_;
    }
    public java.util.List<? extends dfproto.Basic.EnumItemNameOrBuilder> 
        getInorganicFlagsOrBuilderList() {
      return inorganicFlags_;
    }
    public int getInorganicFlagsCount() {
      return inorganicFlags_.size();
    }
    public dfproto.Basic.EnumItemName getInorganicFlags(int index) {
      return inorganicFlags_.get(index);
    }
    public dfproto.Basic.EnumItemNameOrBuilder getInorganicFlagsOrBuilder(
        int index) {
      return inorganicFlags_.get(index);
    }
    
    // repeated .dfproto.EnumItemName unit_flags1 = 3;
    public static final int UNIT_FLAGS1_FIELD_NUMBER = 3;
    private java.util.List<dfproto.Basic.EnumItemName> unitFlags1_;
    public java.util.List<dfproto.Basic.EnumItemName> getUnitFlags1List() {
      return unitFlags1_;
    }
    public java.util.List<? extends dfproto.Basic.EnumItemNameOrBuilder> 
        getUnitFlags1OrBuilderList() {
      return unitFlags1_;
    }
    public int getUnitFlags1Count() {
      return unitFlags1_.size();
    }
    public dfproto.Basic.EnumItemName getUnitFlags1(int index) {
      return unitFlags1_.get(index);
    }
    public dfproto.Basic.EnumItemNameOrBuilder getUnitFlags1OrBuilder(
        int index) {
      return unitFlags1_.get(index);
    }
    
    // repeated .dfproto.EnumItemName unit_flags2 = 4;
    public static final int UNIT_FLAGS2_FIELD_NUMBER = 4;
    private java.util.List<dfproto.Basic.EnumItemName> unitFlags2_;
    public java.util.List<dfproto.Basic.EnumItemName> getUnitFlags2List() {
      return unitFlags2_;
    }
    public java.util.List<? extends dfproto.Basic.EnumItemNameOrBuilder> 
        getUnitFlags2OrBuilderList() {
      return unitFlags2_;
    }
    public int getUnitFlags2Count() {
      return unitFlags2_.size();
    }
    public dfproto.Basic.EnumItemName getUnitFlags2(int index) {
      return unitFlags2_.get(index);
    }
    public dfproto.Basic.EnumItemNameOrBuilder getUnitFlags2OrBuilder(
        int index) {
      return unitFlags2_.get(index);
    }
    
    // repeated .dfproto.EnumItemName unit_flags3 = 5;
    public static final int UNIT_FLAGS3_FIELD_NUMBER = 5;
    private java.util.List<dfproto.Basic.EnumItemName> unitFlags3_;
    public java.util.List<dfproto.Basic.EnumItemName> getUnitFlags3List() {
      return unitFlags3_;
    }
    public java.util.List<? extends dfproto.Basic.EnumItemNameOrBuilder> 
        getUnitFlags3OrBuilderList() {
      return unitFlags3_;
    }
    public int getUnitFlags3Count() {
      return unitFlags3_.size();
    }
    public dfproto.Basic.EnumItemName getUnitFlags3(int index) {
      return unitFlags3_.get(index);
    }
    public dfproto.Basic.EnumItemNameOrBuilder getUnitFlags3OrBuilder(
        int index) {
      return unitFlags3_.get(index);
    }
    
    // repeated .dfproto.EnumItemName unit_labor = 6;
    public static final int UNIT_LABOR_FIELD_NUMBER = 6;
    private java.util.List<dfproto.Basic.EnumItemName> unitLabor_;
    public java.util.List<dfproto.Basic.EnumItemName> getUnitLaborList() {
      return unitLabor_;
    }
    public java.util.List<? extends dfproto.Basic.EnumItemNameOrBuilder> 
        getUnitLaborOrBuilderList() {
      return unitLabor_;
    }
    public int getUnitLaborCount() {
      return unitLabor_.size();
    }
    public dfproto.Basic.EnumItemName getUnitLabor(int index) {
      return unitLabor_.get(index);
    }
    public dfproto.Basic.EnumItemNameOrBuilder getUnitLaborOrBuilder(
        int index) {
      return unitLabor_.get(index);
    }
    
    // repeated .dfproto.EnumItemName job_skill = 7;
    public static final int JOB_SKILL_FIELD_NUMBER = 7;
    private java.util.List<dfproto.Basic.EnumItemName> jobSkill_;
    public java.util.List<dfproto.Basic.EnumItemName> getJobSkillList() {
      return jobSkill_;
    }
    public java.util.List<? extends dfproto.Basic.EnumItemNameOrBuilder> 
        getJobSkillOrBuilderList() {
      return jobSkill_;
    }
    public int getJobSkillCount() {
      return jobSkill_.size();
    }
    public dfproto.Basic.EnumItemName getJobSkill(int index) {
      return jobSkill_.get(index);
    }
    public dfproto.Basic.EnumItemNameOrBuilder getJobSkillOrBuilder(
        int index) {
      return jobSkill_.get(index);
    }
    
    // repeated .dfproto.EnumItemName cie_add_tag_mask1 = 8;
    public static final int CIE_ADD_TAG_MASK1_FIELD_NUMBER = 8;
    private java.util.List<dfproto.Basic.EnumItemName> cieAddTagMask1_;
    public java.util.List<dfproto.Basic.EnumItemName> getCieAddTagMask1List() {
      return cieAddTagMask1_;
    }
    public java.util.List<? extends dfproto.Basic.EnumItemNameOrBuilder> 
        getCieAddTagMask1OrBuilderList() {
      return cieAddTagMask1_;
    }
    public int getCieAddTagMask1Count() {
      return cieAddTagMask1_.size();
    }
    public dfproto.Basic.EnumItemName getCieAddTagMask1(int index) {
      return cieAddTagMask1_.get(index);
    }
    public dfproto.Basic.EnumItemNameOrBuilder getCieAddTagMask1OrBuilder(
        int index) {
      return cieAddTagMask1_.get(index);
    }
    
    // repeated .dfproto.EnumItemName cie_add_tag_mask2 = 9;
    public static final int CIE_ADD_TAG_MASK2_FIELD_NUMBER = 9;
    private java.util.List<dfproto.Basic.EnumItemName> cieAddTagMask2_;
    public java.util.List<dfproto.Basic.EnumItemName> getCieAddTagMask2List() {
      return cieAddTagMask2_;
    }
    public java.util.List<? extends dfproto.Basic.EnumItemNameOrBuilder> 
        getCieAddTagMask2OrBuilderList() {
      return cieAddTagMask2_;
    }
    public int getCieAddTagMask2Count() {
      return cieAddTagMask2_.size();
    }
    public dfproto.Basic.EnumItemName getCieAddTagMask2(int index) {
      return cieAddTagMask2_.get(index);
    }
    public dfproto.Basic.EnumItemNameOrBuilder getCieAddTagMask2OrBuilder(
        int index) {
      return cieAddTagMask2_.get(index);
    }
    
    // repeated .dfproto.EnumItemName death_info_flags = 10;
    public static final int DEATH_INFO_FLAGS_FIELD_NUMBER = 10;
    private java.util.List<dfproto.Basic.EnumItemName> deathInfoFlags_;
    public java.util.List<dfproto.Basic.EnumItemName> getDeathInfoFlagsList() {
      return deathInfoFlags_;
    }
    public java.util.List<? extends dfproto.Basic.EnumItemNameOrBuilder> 
        getDeathInfoFlagsOrBuilderList() {
      return deathInfoFlags_;
    }
    public int getDeathInfoFlagsCount() {
      return deathInfoFlags_.size();
    }
    public dfproto.Basic.EnumItemName getDeathInfoFlags(int index) {
      return deathInfoFlags_.get(index);
    }
    public dfproto.Basic.EnumItemNameOrBuilder getDeathInfoFlagsOrBuilder(
        int index) {
      return deathInfoFlags_.get(index);
    }
    
    // repeated .dfproto.EnumItemName profession = 11;
    public static final int PROFESSION_FIELD_NUMBER = 11;
    private java.util.List<dfproto.Basic.EnumItemName> profession_;
    public java.util.List<dfproto.Basic.EnumItemName> getProfessionList() {
      return profession_;
    }
    public java.util.List<? extends dfproto.Basic.EnumItemNameOrBuilder> 
        getProfessionOrBuilderList() {
      return profession_;
    }
    public int getProfessionCount() {
      return profession_.size();
    }
    public dfproto.Basic.EnumItemName getProfession(int index) {
      return profession_.get(index);
    }
    public dfproto.Basic.EnumItemNameOrBuilder getProfessionOrBuilder(
        int index) {
      return profession_.get(index);
    }
    
    private void initFields() {
      materialFlags_ = java.util.Collections.emptyList();
      inorganicFlags_ = java.util.Collections.emptyList();
      unitFlags1_ = java.util.Collections.emptyList();
      unitFlags2_ = java.util.Collections.emptyList();
      unitFlags3_ = java.util.Collections.emptyList();
      unitLabor_ = java.util.Collections.emptyList();
      jobSkill_ = java.util.Collections.emptyList();
      cieAddTagMask1_ = java.util.Collections.emptyList();
      cieAddTagMask2_ = java.util.Collections.emptyList();
      deathInfoFlags_ = java.util.Collections.emptyList();
      profession_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      for (int i = 0; i < getMaterialFlagsCount(); i++) {
        if (!getMaterialFlags(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getInorganicFlagsCount(); i++) {
        if (!getInorganicFlags(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getUnitFlags1Count(); i++) {
        if (!getUnitFlags1(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getUnitFlags2Count(); i++) {
        if (!getUnitFlags2(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getUnitFlags3Count(); i++) {
        if (!getUnitFlags3(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getUnitLaborCount(); i++) {
        if (!getUnitLabor(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getJobSkillCount(); i++) {
        if (!getJobSkill(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getCieAddTagMask1Count(); i++) {
        if (!getCieAddTagMask1(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getCieAddTagMask2Count(); i++) {
        if (!getCieAddTagMask2(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getDeathInfoFlagsCount(); i++) {
        if (!getDeathInfoFlags(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getProfessionCount(); i++) {
        if (!getProfession(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < materialFlags_.size(); i++) {
        output.writeMessage(1, materialFlags_.get(i));
      }
      for (int i = 0; i < inorganicFlags_.size(); i++) {
        output.writeMessage(2, inorganicFlags_.get(i));
      }
      for (int i = 0; i < unitFlags1_.size(); i++) {
        output.writeMessage(3, unitFlags1_.get(i));
      }
      for (int i = 0; i < unitFlags2_.size(); i++) {
        output.writeMessage(4, unitFlags2_.get(i));
      }
      for (int i = 0; i < unitFlags3_.size(); i++) {
        output.writeMessage(5, unitFlags3_.get(i));
      }
      for (int i = 0; i < unitLabor_.size(); i++) {
        output.writeMessage(6, unitLabor_.get(i));
      }
      for (int i = 0; i < jobSkill_.size(); i++) {
        output.writeMessage(7, jobSkill_.get(i));
      }
      for (int i = 0; i < cieAddTagMask1_.size(); i++) {
        output.writeMessage(8, cieAddTagMask1_.get(i));
      }
      for (int i = 0; i < cieAddTagMask2_.size(); i++) {
        output.writeMessage(9, cieAddTagMask2_.get(i));
      }
      for (int i = 0; i < deathInfoFlags_.size(); i++) {
        output.writeMessage(10, deathInfoFlags_.get(i));
      }
      for (int i = 0; i < profession_.size(); i++) {
        output.writeMessage(11, profession_.get(i));
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (int i = 0; i < materialFlags_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, materialFlags_.get(i));
      }
      for (int i = 0; i < inorganicFlags_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, inorganicFlags_.get(i));
      }
      for (int i = 0; i < unitFlags1_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, unitFlags1_.get(i));
      }
      for (int i = 0; i < unitFlags2_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, unitFlags2_.get(i));
      }
      for (int i = 0; i < unitFlags3_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, unitFlags3_.get(i));
      }
      for (int i = 0; i < unitLabor_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, unitLabor_.get(i));
      }
      for (int i = 0; i < jobSkill_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, jobSkill_.get(i));
      }
      for (int i = 0; i < cieAddTagMask1_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, cieAddTagMask1_.get(i));
      }
      for (int i = 0; i < cieAddTagMask2_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, cieAddTagMask2_.get(i));
      }
      for (int i = 0; i < deathInfoFlags_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, deathInfoFlags_.get(i));
      }
      for (int i = 0; i < profession_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, profession_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static dfproto.BasicApi.ListEnumsOut parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static dfproto.BasicApi.ListEnumsOut parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static dfproto.BasicApi.ListEnumsOut parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static dfproto.BasicApi.ListEnumsOut parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static dfproto.BasicApi.ListEnumsOut parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static dfproto.BasicApi.ListEnumsOut parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static dfproto.BasicApi.ListEnumsOut parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static dfproto.BasicApi.ListEnumsOut parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static dfproto.BasicApi.ListEnumsOut parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static dfproto.BasicApi.ListEnumsOut parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(dfproto.BasicApi.ListEnumsOut prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          dfproto.BasicApi.ListEnumsOut, Builder>
        implements dfproto.BasicApi.ListEnumsOutOrBuilder {
      // Construct using dfproto.BasicApi.ListEnumsOut.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        materialFlags_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        inorganicFlags_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        unitFlags1_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        unitFlags2_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        unitFlags3_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        unitLabor_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        jobSkill_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        cieAddTagMask1_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        cieAddTagMask2_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        deathInfoFlags_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        profession_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public dfproto.BasicApi.ListEnumsOut getDefaultInstanceForType() {
        return dfproto.BasicApi.ListEnumsOut.getDefaultInstance();
      }
      
      public dfproto.BasicApi.ListEnumsOut build() {
        dfproto.BasicApi.ListEnumsOut result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private dfproto.BasicApi.ListEnumsOut buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        dfproto.BasicApi.ListEnumsOut result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public dfproto.BasicApi.ListEnumsOut buildPartial() {
        dfproto.BasicApi.ListEnumsOut result = new dfproto.BasicApi.ListEnumsOut(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          materialFlags_ = java.util.Collections.unmodifiableList(materialFlags_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.materialFlags_ = materialFlags_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          inorganicFlags_ = java.util.Collections.unmodifiableList(inorganicFlags_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.inorganicFlags_ = inorganicFlags_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          unitFlags1_ = java.util.Collections.unmodifiableList(unitFlags1_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.unitFlags1_ = unitFlags1_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          unitFlags2_ = java.util.Collections.unmodifiableList(unitFlags2_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.unitFlags2_ = unitFlags2_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          unitFlags3_ = java.util.Collections.unmodifiableList(unitFlags3_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.unitFlags3_ = unitFlags3_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          unitLabor_ = java.util.Collections.unmodifiableList(unitLabor_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.unitLabor_ = unitLabor_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          jobSkill_ = java.util.Collections.unmodifiableList(jobSkill_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.jobSkill_ = jobSkill_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          cieAddTagMask1_ = java.util.Collections.unmodifiableList(cieAddTagMask1_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.cieAddTagMask1_ = cieAddTagMask1_;
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          cieAddTagMask2_ = java.util.Collections.unmodifiableList(cieAddTagMask2_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.cieAddTagMask2_ = cieAddTagMask2_;
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          deathInfoFlags_ = java.util.Collections.unmodifiableList(deathInfoFlags_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.deathInfoFlags_ = deathInfoFlags_;
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          profession_ = java.util.Collections.unmodifiableList(profession_);
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.profession_ = profession_;
        return result;
      }
      
      public Builder mergeFrom(dfproto.BasicApi.ListEnumsOut other) {
        if (other == dfproto.BasicApi.ListEnumsOut.getDefaultInstance()) return this;
        if (!other.materialFlags_.isEmpty()) {
          if (materialFlags_.isEmpty()) {
            materialFlags_ = other.materialFlags_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureMaterialFlagsIsMutable();
            materialFlags_.addAll(other.materialFlags_);
          }
          
        }
        if (!other.inorganicFlags_.isEmpty()) {
          if (inorganicFlags_.isEmpty()) {
            inorganicFlags_ = other.inorganicFlags_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureInorganicFlagsIsMutable();
            inorganicFlags_.addAll(other.inorganicFlags_);
          }
          
        }
        if (!other.unitFlags1_.isEmpty()) {
          if (unitFlags1_.isEmpty()) {
            unitFlags1_ = other.unitFlags1_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureUnitFlags1IsMutable();
            unitFlags1_.addAll(other.unitFlags1_);
          }
          
        }
        if (!other.unitFlags2_.isEmpty()) {
          if (unitFlags2_.isEmpty()) {
            unitFlags2_ = other.unitFlags2_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureUnitFlags2IsMutable();
            unitFlags2_.addAll(other.unitFlags2_);
          }
          
        }
        if (!other.unitFlags3_.isEmpty()) {
          if (unitFlags3_.isEmpty()) {
            unitFlags3_ = other.unitFlags3_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureUnitFlags3IsMutable();
            unitFlags3_.addAll(other.unitFlags3_);
          }
          
        }
        if (!other.unitLabor_.isEmpty()) {
          if (unitLabor_.isEmpty()) {
            unitLabor_ = other.unitLabor_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureUnitLaborIsMutable();
            unitLabor_.addAll(other.unitLabor_);
          }
          
        }
        if (!other.jobSkill_.isEmpty()) {
          if (jobSkill_.isEmpty()) {
            jobSkill_ = other.jobSkill_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureJobSkillIsMutable();
            jobSkill_.addAll(other.jobSkill_);
          }
          
        }
        if (!other.cieAddTagMask1_.isEmpty()) {
          if (cieAddTagMask1_.isEmpty()) {
            cieAddTagMask1_ = other.cieAddTagMask1_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureCieAddTagMask1IsMutable();
            cieAddTagMask1_.addAll(other.cieAddTagMask1_);
          }
          
        }
        if (!other.cieAddTagMask2_.isEmpty()) {
          if (cieAddTagMask2_.isEmpty()) {
            cieAddTagMask2_ = other.cieAddTagMask2_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureCieAddTagMask2IsMutable();
            cieAddTagMask2_.addAll(other.cieAddTagMask2_);
          }
          
        }
        if (!other.deathInfoFlags_.isEmpty()) {
          if (deathInfoFlags_.isEmpty()) {
            deathInfoFlags_ = other.deathInfoFlags_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureDeathInfoFlagsIsMutable();
            deathInfoFlags_.addAll(other.deathInfoFlags_);
          }
          
        }
        if (!other.profession_.isEmpty()) {
          if (profession_.isEmpty()) {
            profession_ = other.profession_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensureProfessionIsMutable();
            profession_.addAll(other.profession_);
          }
          
        }
        return this;
      }
      
      public final boolean isInitialized() {
        for (int i = 0; i < getMaterialFlagsCount(); i++) {
          if (!getMaterialFlags(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getInorganicFlagsCount(); i++) {
          if (!getInorganicFlags(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getUnitFlags1Count(); i++) {
          if (!getUnitFlags1(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getUnitFlags2Count(); i++) {
          if (!getUnitFlags2(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getUnitFlags3Count(); i++) {
          if (!getUnitFlags3(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getUnitLaborCount(); i++) {
          if (!getUnitLabor(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getJobSkillCount(); i++) {
          if (!getJobSkill(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getCieAddTagMask1Count(); i++) {
          if (!getCieAddTagMask1(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getCieAddTagMask2Count(); i++) {
          if (!getCieAddTagMask2(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getDeathInfoFlagsCount(); i++) {
          if (!getDeathInfoFlags(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getProfessionCount(); i++) {
          if (!getProfession(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 10: {
              dfproto.Basic.EnumItemName.Builder subBuilder = dfproto.Basic.EnumItemName.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addMaterialFlags(subBuilder.buildPartial());
              break;
            }
            case 18: {
              dfproto.Basic.EnumItemName.Builder subBuilder = dfproto.Basic.EnumItemName.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addInorganicFlags(subBuilder.buildPartial());
              break;
            }
            case 26: {
              dfproto.Basic.EnumItemName.Builder subBuilder = dfproto.Basic.EnumItemName.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addUnitFlags1(subBuilder.buildPartial());
              break;
            }
            case 34: {
              dfproto.Basic.EnumItemName.Builder subBuilder = dfproto.Basic.EnumItemName.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addUnitFlags2(subBuilder.buildPartial());
              break;
            }
            case 42: {
              dfproto.Basic.EnumItemName.Builder subBuilder = dfproto.Basic.EnumItemName.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addUnitFlags3(subBuilder.buildPartial());
              break;
            }
            case 50: {
              dfproto.Basic.EnumItemName.Builder subBuilder = dfproto.Basic.EnumItemName.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addUnitLabor(subBuilder.buildPartial());
              break;
            }
            case 58: {
              dfproto.Basic.EnumItemName.Builder subBuilder = dfproto.Basic.EnumItemName.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addJobSkill(subBuilder.buildPartial());
              break;
            }
            case 66: {
              dfproto.Basic.EnumItemName.Builder subBuilder = dfproto.Basic.EnumItemName.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addCieAddTagMask1(subBuilder.buildPartial());
              break;
            }
            case 74: {
              dfproto.Basic.EnumItemName.Builder subBuilder = dfproto.Basic.EnumItemName.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addCieAddTagMask2(subBuilder.buildPartial());
              break;
            }
            case 82: {
              dfproto.Basic.EnumItemName.Builder subBuilder = dfproto.Basic.EnumItemName.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addDeathInfoFlags(subBuilder.buildPartial());
              break;
            }
            case 90: {
              dfproto.Basic.EnumItemName.Builder subBuilder = dfproto.Basic.EnumItemName.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addProfession(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated .dfproto.EnumItemName material_flags = 1;
      private java.util.List<dfproto.Basic.EnumItemName> materialFlags_ =
        java.util.Collections.emptyList();
      private void ensureMaterialFlagsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          materialFlags_ = new java.util.ArrayList<dfproto.Basic.EnumItemName>(materialFlags_);
          bitField0_ |= 0x00000001;
         }
      }
      
      public java.util.List<dfproto.Basic.EnumItemName> getMaterialFlagsList() {
        return java.util.Collections.unmodifiableList(materialFlags_);
      }
      public int getMaterialFlagsCount() {
        return materialFlags_.size();
      }
      public dfproto.Basic.EnumItemName getMaterialFlags(int index) {
        return materialFlags_.get(index);
      }
      public Builder setMaterialFlags(
          int index, dfproto.Basic.EnumItemName value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMaterialFlagsIsMutable();
        materialFlags_.set(index, value);
        
        return this;
      }
      public Builder setMaterialFlags(
          int index, dfproto.Basic.EnumItemName.Builder builderForValue) {
        ensureMaterialFlagsIsMutable();
        materialFlags_.set(index, builderForValue.build());
        
        return this;
      }
      public Builder addMaterialFlags(dfproto.Basic.EnumItemName value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMaterialFlagsIsMutable();
        materialFlags_.add(value);
        
        return this;
      }
      public Builder addMaterialFlags(
          int index, dfproto.Basic.EnumItemName value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMaterialFlagsIsMutable();
        materialFlags_.add(index, value);
        
        return this;
      }
      public Builder addMaterialFlags(
          dfproto.Basic.EnumItemName.Builder builderForValue) {
        ensureMaterialFlagsIsMutable();
        materialFlags_.add(builderForValue.build());
        
        return this;
      }
      public Builder addMaterialFlags(
          int index, dfproto.Basic.EnumItemName.Builder builderForValue) {
        ensureMaterialFlagsIsMutable();
        materialFlags_.add(index, builderForValue.build());
        
        return this;
      }
      public Builder addAllMaterialFlags(
          java.lang.Iterable<? extends dfproto.Basic.EnumItemName> values) {
        ensureMaterialFlagsIsMutable();
        super.addAll(values, materialFlags_);
        
        return this;
      }
      public Builder clearMaterialFlags() {
        materialFlags_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        
        return this;
      }
      public Builder removeMaterialFlags(int index) {
        ensureMaterialFlagsIsMutable();
        materialFlags_.remove(index);
        
        return this;
      }
      
      // repeated .dfproto.EnumItemName inorganic_flags = 2;
      private java.util.List<dfproto.Basic.EnumItemName> inorganicFlags_ =
        java.util.Collections.emptyList();
      private void ensureInorganicFlagsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          inorganicFlags_ = new java.util.ArrayList<dfproto.Basic.EnumItemName>(inorganicFlags_);
          bitField0_ |= 0x00000002;
         }
      }
      
      public java.util.List<dfproto.Basic.EnumItemName> getInorganicFlagsList() {
        return java.util.Collections.unmodifiableList(inorganicFlags_);
      }
      public int getInorganicFlagsCount() {
        return inorganicFlags_.size();
      }
      public dfproto.Basic.EnumItemName getInorganicFlags(int index) {
        return inorganicFlags_.get(index);
      }
      public Builder setInorganicFlags(
          int index, dfproto.Basic.EnumItemName value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureInorganicFlagsIsMutable();
        inorganicFlags_.set(index, value);
        
        return this;
      }
      public Builder setInorganicFlags(
          int index, dfproto.Basic.EnumItemName.Builder builderForValue) {
        ensureInorganicFlagsIsMutable();
        inorganicFlags_.set(index, builderForValue.build());
        
        return this;
      }
      public Builder addInorganicFlags(dfproto.Basic.EnumItemName value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureInorganicFlagsIsMutable();
        inorganicFlags_.add(value);
        
        return this;
      }
      public Builder addInorganicFlags(
          int index, dfproto.Basic.EnumItemName value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureInorganicFlagsIsMutable();
        inorganicFlags_.add(index, value);
        
        return this;
      }
      public Builder addInorganicFlags(
          dfproto.Basic.EnumItemName.Builder builderForValue) {
        ensureInorganicFlagsIsMutable();
        inorganicFlags_.add(builderForValue.build());
        
        return this;
      }
      public Builder addInorganicFlags(
          int index, dfproto.Basic.EnumItemName.Builder builderForValue) {
        ensureInorganicFlagsIsMutable();
        inorganicFlags_.add(index, builderForValue.build());
        
        return this;
      }
      public Builder addAllInorganicFlags(
          java.lang.Iterable<? extends dfproto.Basic.EnumItemName> values) {
        ensureInorganicFlagsIsMutable();
        super.addAll(values, inorganicFlags_);
        
        return this;
      }
      public Builder clearInorganicFlags() {
        inorganicFlags_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        
        return this;
      }
      public Builder removeInorganicFlags(int index) {
        ensureInorganicFlagsIsMutable();
        inorganicFlags_.remove(index);
        
        return this;
      }
      
      // repeated .dfproto.EnumItemName unit_flags1 = 3;
      private java.util.List<dfproto.Basic.EnumItemName> unitFlags1_ =
        java.util.Collections.emptyList();
      private void ensureUnitFlags1IsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          unitFlags1_ = new java.util.ArrayList<dfproto.Basic.EnumItemName>(unitFlags1_);
          bitField0_ |= 0x00000004;
         }
      }
      
      public java.util.List<dfproto.Basic.EnumItemName> getUnitFlags1List() {
        return java.util.Collections.unmodifiableList(unitFlags1_);
      }
      public int getUnitFlags1Count() {
        return unitFlags1_.size();
      }
      public dfproto.Basic.EnumItemName getUnitFlags1(int index) {
        return unitFlags1_.get(index);
      }
      public Builder setUnitFlags1(
          int index, dfproto.Basic.EnumItemName value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUnitFlags1IsMutable();
        unitFlags1_.set(index, value);
        
        return this;
      }
      public Builder setUnitFlags1(
          int index, dfproto.Basic.EnumItemName.Builder builderForValue) {
        ensureUnitFlags1IsMutable();
        unitFlags1_.set(index, builderForValue.build());
        
        return this;
      }
      public Builder addUnitFlags1(dfproto.Basic.EnumItemName value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUnitFlags1IsMutable();
        unitFlags1_.add(value);
        
        return this;
      }
      public Builder addUnitFlags1(
          int index, dfproto.Basic.EnumItemName value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUnitFlags1IsMutable();
        unitFlags1_.add(index, value);
        
        return this;
      }
      public Builder addUnitFlags1(
          dfproto.Basic.EnumItemName.Builder builderForValue) {
        ensureUnitFlags1IsMutable();
        unitFlags1_.add(builderForValue.build());
        
        return this;
      }
      public Builder addUnitFlags1(
          int index, dfproto.Basic.EnumItemName.Builder builderForValue) {
        ensureUnitFlags1IsMutable();
        unitFlags1_.add(index, builderForValue.build());
        
        return this;
      }
      public Builder addAllUnitFlags1(
          java.lang.Iterable<? extends dfproto.Basic.EnumItemName> values) {
        ensureUnitFlags1IsMutable();
        super.addAll(values, unitFlags1_);
        
        return this;
      }
      public Builder clearUnitFlags1() {
        unitFlags1_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        
        return this;
      }
      public Builder removeUnitFlags1(int index) {
        ensureUnitFlags1IsMutable();
        unitFlags1_.remove(index);
        
        return this;
      }
      
      // repeated .dfproto.EnumItemName unit_flags2 = 4;
      private java.util.List<dfproto.Basic.EnumItemName> unitFlags2_ =
        java.util.Collections.emptyList();
      private void ensureUnitFlags2IsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          unitFlags2_ = new java.util.ArrayList<dfproto.Basic.EnumItemName>(unitFlags2_);
          bitField0_ |= 0x00000008;
         }
      }
      
      public java.util.List<dfproto.Basic.EnumItemName> getUnitFlags2List() {
        return java.util.Collections.unmodifiableList(unitFlags2_);
      }
      public int getUnitFlags2Count() {
        return unitFlags2_.size();
      }
      public dfproto.Basic.EnumItemName getUnitFlags2(int index) {
        return unitFlags2_.get(index);
      }
      public Builder setUnitFlags2(
          int index, dfproto.Basic.EnumItemName value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUnitFlags2IsMutable();
        unitFlags2_.set(index, value);
        
        return this;
      }
      public Builder setUnitFlags2(
          int index, dfproto.Basic.EnumItemName.Builder builderForValue) {
        ensureUnitFlags2IsMutable();
        unitFlags2_.set(index, builderForValue.build());
        
        return this;
      }
      public Builder addUnitFlags2(dfproto.Basic.EnumItemName value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUnitFlags2IsMutable();
        unitFlags2_.add(value);
        
        return this;
      }
      public Builder addUnitFlags2(
          int index, dfproto.Basic.EnumItemName value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUnitFlags2IsMutable();
        unitFlags2_.add(index, value);
        
        return this;
      }
      public Builder addUnitFlags2(
          dfproto.Basic.EnumItemName.Builder builderForValue) {
        ensureUnitFlags2IsMutable();
        unitFlags2_.add(builderForValue.build());
        
        return this;
      }
      public Builder addUnitFlags2(
          int index, dfproto.Basic.EnumItemName.Builder builderForValue) {
        ensureUnitFlags2IsMutable();
        unitFlags2_.add(index, builderForValue.build());
        
        return this;
      }
      public Builder addAllUnitFlags2(
          java.lang.Iterable<? extends dfproto.Basic.EnumItemName> values) {
        ensureUnitFlags2IsMutable();
        super.addAll(values, unitFlags2_);
        
        return this;
      }
      public Builder clearUnitFlags2() {
        unitFlags2_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        
        return this;
      }
      public Builder removeUnitFlags2(int index) {
        ensureUnitFlags2IsMutable();
        unitFlags2_.remove(index);
        
        return this;
      }
      
      // repeated .dfproto.EnumItemName unit_flags3 = 5;
      private java.util.List<dfproto.Basic.EnumItemName> unitFlags3_ =
        java.util.Collections.emptyList();
      private void ensureUnitFlags3IsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          unitFlags3_ = new java.util.ArrayList<dfproto.Basic.EnumItemName>(unitFlags3_);
          bitField0_ |= 0x00000010;
         }
      }
      
      public java.util.List<dfproto.Basic.EnumItemName> getUnitFlags3List() {
        return java.util.Collections.unmodifiableList(unitFlags3_);
      }
      public int getUnitFlags3Count() {
        return unitFlags3_.size();
      }
      public dfproto.Basic.EnumItemName getUnitFlags3(int index) {
        return unitFlags3_.get(index);
      }
      public Builder setUnitFlags3(
          int index, dfproto.Basic.EnumItemName value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUnitFlags3IsMutable();
        unitFlags3_.set(index, value);
        
        return this;
      }
      public Builder setUnitFlags3(
          int index, dfproto.Basic.EnumItemName.Builder builderForValue) {
        ensureUnitFlags3IsMutable();
        unitFlags3_.set(index, builderForValue.build());
        
        return this;
      }
      public Builder addUnitFlags3(dfproto.Basic.EnumItemName value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUnitFlags3IsMutable();
        unitFlags3_.add(value);
        
        return this;
      }
      public Builder addUnitFlags3(
          int index, dfproto.Basic.EnumItemName value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUnitFlags3IsMutable();
        unitFlags3_.add(index, value);
        
        return this;
      }
      public Builder addUnitFlags3(
          dfproto.Basic.EnumItemName.Builder builderForValue) {
        ensureUnitFlags3IsMutable();
        unitFlags3_.add(builderForValue.build());
        
        return this;
      }
      public Builder addUnitFlags3(
          int index, dfproto.Basic.EnumItemName.Builder builderForValue) {
        ensureUnitFlags3IsMutable();
        unitFlags3_.add(index, builderForValue.build());
        
        return this;
      }
      public Builder addAllUnitFlags3(
          java.lang.Iterable<? extends dfproto.Basic.EnumItemName> values) {
        ensureUnitFlags3IsMutable();
        super.addAll(values, unitFlags3_);
        
        return this;
      }
      public Builder clearUnitFlags3() {
        unitFlags3_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        
        return this;
      }
      public Builder removeUnitFlags3(int index) {
        ensureUnitFlags3IsMutable();
        unitFlags3_.remove(index);
        
        return this;
      }
      
      // repeated .dfproto.EnumItemName unit_labor = 6;
      private java.util.List<dfproto.Basic.EnumItemName> unitLabor_ =
        java.util.Collections.emptyList();
      private void ensureUnitLaborIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          unitLabor_ = new java.util.ArrayList<dfproto.Basic.EnumItemName>(unitLabor_);
          bitField0_ |= 0x00000020;
         }
      }
      
      public java.util.List<dfproto.Basic.EnumItemName> getUnitLaborList() {
        return java.util.Collections.unmodifiableList(unitLabor_);
      }
      public int getUnitLaborCount() {
        return unitLabor_.size();
      }
      public dfproto.Basic.EnumItemName getUnitLabor(int index) {
        return unitLabor_.get(index);
      }
      public Builder setUnitLabor(
          int index, dfproto.Basic.EnumItemName value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUnitLaborIsMutable();
        unitLabor_.set(index, value);
        
        return this;
      }
      public Builder setUnitLabor(
          int index, dfproto.Basic.EnumItemName.Builder builderForValue) {
        ensureUnitLaborIsMutable();
        unitLabor_.set(index, builderForValue.build());
        
        return this;
      }
      public Builder addUnitLabor(dfproto.Basic.EnumItemName value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUnitLaborIsMutable();
        unitLabor_.add(value);
        
        return this;
      }
      public Builder addUnitLabor(
          int index, dfproto.Basic.EnumItemName value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUnitLaborIsMutable();
        unitLabor_.add(index, value);
        
        return this;
      }
      public Builder addUnitLabor(
          dfproto.Basic.EnumItemName.Builder builderForValue) {
        ensureUnitLaborIsMutable();
        unitLabor_.add(builderForValue.build());
        
        return this;
      }
      public Builder addUnitLabor(
          int index, dfproto.Basic.EnumItemName.Builder builderForValue) {
        ensureUnitLaborIsMutable();
        unitLabor_.add(index, builderForValue.build());
        
        return this;
      }
      public Builder addAllUnitLabor(
          java.lang.Iterable<? extends dfproto.Basic.EnumItemName> values) {
        ensureUnitLaborIsMutable();
        super.addAll(values, unitLabor_);
        
        return this;
      }
      public Builder clearUnitLabor() {
        unitLabor_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        
        return this;
      }
      public Builder removeUnitLabor(int index) {
        ensureUnitLaborIsMutable();
        unitLabor_.remove(index);
        
        return this;
      }
      
      // repeated .dfproto.EnumItemName job_skill = 7;
      private java.util.List<dfproto.Basic.EnumItemName> jobSkill_ =
        java.util.Collections.emptyList();
      private void ensureJobSkillIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          jobSkill_ = new java.util.ArrayList<dfproto.Basic.EnumItemName>(jobSkill_);
          bitField0_ |= 0x00000040;
         }
      }
      
      public java.util.List<dfproto.Basic.EnumItemName> getJobSkillList() {
        return java.util.Collections.unmodifiableList(jobSkill_);
      }
      public int getJobSkillCount() {
        return jobSkill_.size();
      }
      public dfproto.Basic.EnumItemName getJobSkill(int index) {
        return jobSkill_.get(index);
      }
      public Builder setJobSkill(
          int index, dfproto.Basic.EnumItemName value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureJobSkillIsMutable();
        jobSkill_.set(index, value);
        
        return this;
      }
      public Builder setJobSkill(
          int index, dfproto.Basic.EnumItemName.Builder builderForValue) {
        ensureJobSkillIsMutable();
        jobSkill_.set(index, builderForValue.build());
        
        return this;
      }
      public Builder addJobSkill(dfproto.Basic.EnumItemName value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureJobSkillIsMutable();
        jobSkill_.add(value);
        
        return this;
      }
      public Builder addJobSkill(
          int index, dfproto.Basic.EnumItemName value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureJobSkillIsMutable();
        jobSkill_.add(index, value);
        
        return this;
      }
      public Builder addJobSkill(
          dfproto.Basic.EnumItemName.Builder builderForValue) {
        ensureJobSkillIsMutable();
        jobSkill_.add(builderForValue.build());
        
        return this;
      }
      public Builder addJobSkill(
          int index, dfproto.Basic.EnumItemName.Builder builderForValue) {
        ensureJobSkillIsMutable();
        jobSkill_.add(index, builderForValue.build());
        
        return this;
      }
      public Builder addAllJobSkill(
          java.lang.Iterable<? extends dfproto.Basic.EnumItemName> values) {
        ensureJobSkillIsMutable();
        super.addAll(values, jobSkill_);
        
        return this;
      }
      public Builder clearJobSkill() {
        jobSkill_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        
        return this;
      }
      public Builder removeJobSkill(int index) {
        ensureJobSkillIsMutable();
        jobSkill_.remove(index);
        
        return this;
      }
      
      // repeated .dfproto.EnumItemName cie_add_tag_mask1 = 8;
      private java.util.List<dfproto.Basic.EnumItemName> cieAddTagMask1_ =
        java.util.Collections.emptyList();
      private void ensureCieAddTagMask1IsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          cieAddTagMask1_ = new java.util.ArrayList<dfproto.Basic.EnumItemName>(cieAddTagMask1_);
          bitField0_ |= 0x00000080;
         }
      }
      
      public java.util.List<dfproto.Basic.EnumItemName> getCieAddTagMask1List() {
        return java.util.Collections.unmodifiableList(cieAddTagMask1_);
      }
      public int getCieAddTagMask1Count() {
        return cieAddTagMask1_.size();
      }
      public dfproto.Basic.EnumItemName getCieAddTagMask1(int index) {
        return cieAddTagMask1_.get(index);
      }
      public Builder setCieAddTagMask1(
          int index, dfproto.Basic.EnumItemName value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCieAddTagMask1IsMutable();
        cieAddTagMask1_.set(index, value);
        
        return this;
      }
      public Builder setCieAddTagMask1(
          int index, dfproto.Basic.EnumItemName.Builder builderForValue) {
        ensureCieAddTagMask1IsMutable();
        cieAddTagMask1_.set(index, builderForValue.build());
        
        return this;
      }
      public Builder addCieAddTagMask1(dfproto.Basic.EnumItemName value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCieAddTagMask1IsMutable();
        cieAddTagMask1_.add(value);
        
        return this;
      }
      public Builder addCieAddTagMask1(
          int index, dfproto.Basic.EnumItemName value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCieAddTagMask1IsMutable();
        cieAddTagMask1_.add(index, value);
        
        return this;
      }
      public Builder addCieAddTagMask1(
          dfproto.Basic.EnumItemName.Builder builderForValue) {
        ensureCieAddTagMask1IsMutable();
        cieAddTagMask1_.add(builderForValue.build());
        
        return this;
      }
      public Builder addCieAddTagMask1(
          int index, dfproto.Basic.EnumItemName.Builder builderForValue) {
        ensureCieAddTagMask1IsMutable();
        cieAddTagMask1_.add(index, builderForValue.build());
        
        return this;
      }
      public Builder addAllCieAddTagMask1(
          java.lang.Iterable<? extends dfproto.Basic.EnumItemName> values) {
        ensureCieAddTagMask1IsMutable();
        super.addAll(values, cieAddTagMask1_);
        
        return this;
      }
      public Builder clearCieAddTagMask1() {
        cieAddTagMask1_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        
        return this;
      }
      public Builder removeCieAddTagMask1(int index) {
        ensureCieAddTagMask1IsMutable();
        cieAddTagMask1_.remove(index);
        
        return this;
      }
      
      // repeated .dfproto.EnumItemName cie_add_tag_mask2 = 9;
      private java.util.List<dfproto.Basic.EnumItemName> cieAddTagMask2_ =
        java.util.Collections.emptyList();
      private void ensureCieAddTagMask2IsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          cieAddTagMask2_ = new java.util.ArrayList<dfproto.Basic.EnumItemName>(cieAddTagMask2_);
          bitField0_ |= 0x00000100;
         }
      }
      
      public java.util.List<dfproto.Basic.EnumItemName> getCieAddTagMask2List() {
        return java.util.Collections.unmodifiableList(cieAddTagMask2_);
      }
      public int getCieAddTagMask2Count() {
        return cieAddTagMask2_.size();
      }
      public dfproto.Basic.EnumItemName getCieAddTagMask2(int index) {
        return cieAddTagMask2_.get(index);
      }
      public Builder setCieAddTagMask2(
          int index, dfproto.Basic.EnumItemName value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCieAddTagMask2IsMutable();
        cieAddTagMask2_.set(index, value);
        
        return this;
      }
      public Builder setCieAddTagMask2(
          int index, dfproto.Basic.EnumItemName.Builder builderForValue) {
        ensureCieAddTagMask2IsMutable();
        cieAddTagMask2_.set(index, builderForValue.build());
        
        return this;
      }
      public Builder addCieAddTagMask2(dfproto.Basic.EnumItemName value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCieAddTagMask2IsMutable();
        cieAddTagMask2_.add(value);
        
        return this;
      }
      public Builder addCieAddTagMask2(
          int index, dfproto.Basic.EnumItemName value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCieAddTagMask2IsMutable();
        cieAddTagMask2_.add(index, value);
        
        return this;
      }
      public Builder addCieAddTagMask2(
          dfproto.Basic.EnumItemName.Builder builderForValue) {
        ensureCieAddTagMask2IsMutable();
        cieAddTagMask2_.add(builderForValue.build());
        
        return this;
      }
      public Builder addCieAddTagMask2(
          int index, dfproto.Basic.EnumItemName.Builder builderForValue) {
        ensureCieAddTagMask2IsMutable();
        cieAddTagMask2_.add(index, builderForValue.build());
        
        return this;
      }
      public Builder addAllCieAddTagMask2(
          java.lang.Iterable<? extends dfproto.Basic.EnumItemName> values) {
        ensureCieAddTagMask2IsMutable();
        super.addAll(values, cieAddTagMask2_);
        
        return this;
      }
      public Builder clearCieAddTagMask2() {
        cieAddTagMask2_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        
        return this;
      }
      public Builder removeCieAddTagMask2(int index) {
        ensureCieAddTagMask2IsMutable();
        cieAddTagMask2_.remove(index);
        
        return this;
      }
      
      // repeated .dfproto.EnumItemName death_info_flags = 10;
      private java.util.List<dfproto.Basic.EnumItemName> deathInfoFlags_ =
        java.util.Collections.emptyList();
      private void ensureDeathInfoFlagsIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          deathInfoFlags_ = new java.util.ArrayList<dfproto.Basic.EnumItemName>(deathInfoFlags_);
          bitField0_ |= 0x00000200;
         }
      }
      
      public java.util.List<dfproto.Basic.EnumItemName> getDeathInfoFlagsList() {
        return java.util.Collections.unmodifiableList(deathInfoFlags_);
      }
      public int getDeathInfoFlagsCount() {
        return deathInfoFlags_.size();
      }
      public dfproto.Basic.EnumItemName getDeathInfoFlags(int index) {
        return deathInfoFlags_.get(index);
      }
      public Builder setDeathInfoFlags(
          int index, dfproto.Basic.EnumItemName value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDeathInfoFlagsIsMutable();
        deathInfoFlags_.set(index, value);
        
        return this;
      }
      public Builder setDeathInfoFlags(
          int index, dfproto.Basic.EnumItemName.Builder builderForValue) {
        ensureDeathInfoFlagsIsMutable();
        deathInfoFlags_.set(index, builderForValue.build());
        
        return this;
      }
      public Builder addDeathInfoFlags(dfproto.Basic.EnumItemName value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDeathInfoFlagsIsMutable();
        deathInfoFlags_.add(value);
        
        return this;
      }
      public Builder addDeathInfoFlags(
          int index, dfproto.Basic.EnumItemName value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDeathInfoFlagsIsMutable();
        deathInfoFlags_.add(index, value);
        
        return this;
      }
      public Builder addDeathInfoFlags(
          dfproto.Basic.EnumItemName.Builder builderForValue) {
        ensureDeathInfoFlagsIsMutable();
        deathInfoFlags_.add(builderForValue.build());
        
        return this;
      }
      public Builder addDeathInfoFlags(
          int index, dfproto.Basic.EnumItemName.Builder builderForValue) {
        ensureDeathInfoFlagsIsMutable();
        deathInfoFlags_.add(index, builderForValue.build());
        
        return this;
      }
      public Builder addAllDeathInfoFlags(
          java.lang.Iterable<? extends dfproto.Basic.EnumItemName> values) {
        ensureDeathInfoFlagsIsMutable();
        super.addAll(values, deathInfoFlags_);
        
        return this;
      }
      public Builder clearDeathInfoFlags() {
        deathInfoFlags_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        
        return this;
      }
      public Builder removeDeathInfoFlags(int index) {
        ensureDeathInfoFlagsIsMutable();
        deathInfoFlags_.remove(index);
        
        return this;
      }
      
      // repeated .dfproto.EnumItemName profession = 11;
      private java.util.List<dfproto.Basic.EnumItemName> profession_ =
        java.util.Collections.emptyList();
      private void ensureProfessionIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          profession_ = new java.util.ArrayList<dfproto.Basic.EnumItemName>(profession_);
          bitField0_ |= 0x00000400;
         }
      }
      
      public java.util.List<dfproto.Basic.EnumItemName> getProfessionList() {
        return java.util.Collections.unmodifiableList(profession_);
      }
      public int getProfessionCount() {
        return profession_.size();
      }
      public dfproto.Basic.EnumItemName getProfession(int index) {
        return profession_.get(index);
      }
      public Builder setProfession(
          int index, dfproto.Basic.EnumItemName value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureProfessionIsMutable();
        profession_.set(index, value);
        
        return this;
      }
      public Builder setProfession(
          int index, dfproto.Basic.EnumItemName.Builder builderForValue) {
        ensureProfessionIsMutable();
        profession_.set(index, builderForValue.build());
        
        return this;
      }
      public Builder addProfession(dfproto.Basic.EnumItemName value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureProfessionIsMutable();
        profession_.add(value);
        
        return this;
      }
      public Builder addProfession(
          int index, dfproto.Basic.EnumItemName value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureProfessionIsMutable();
        profession_.add(index, value);
        
        return this;
      }
      public Builder addProfession(
          dfproto.Basic.EnumItemName.Builder builderForValue) {
        ensureProfessionIsMutable();
        profession_.add(builderForValue.build());
        
        return this;
      }
      public Builder addProfession(
          int index, dfproto.Basic.EnumItemName.Builder builderForValue) {
        ensureProfessionIsMutable();
        profession_.add(index, builderForValue.build());
        
        return this;
      }
      public Builder addAllProfession(
          java.lang.Iterable<? extends dfproto.Basic.EnumItemName> values) {
        ensureProfessionIsMutable();
        super.addAll(values, profession_);
        
        return this;
      }
      public Builder clearProfession() {
        profession_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        
        return this;
      }
      public Builder removeProfession(int index) {
        ensureProfessionIsMutable();
        profession_.remove(index);
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:dfproto.ListEnumsOut)
    }
    
    static {
      defaultInstance = new ListEnumsOut(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:dfproto.ListEnumsOut)
  }
  
  public interface ListJobSkillsOutOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // repeated .dfproto.JobSkillAttr skill = 1;
    java.util.List<dfproto.Basic.JobSkillAttr> 
        getSkillList();
    dfproto.Basic.JobSkillAttr getSkill(int index);
    int getSkillCount();
    
    // repeated .dfproto.ProfessionAttr profession = 2;
    java.util.List<dfproto.Basic.ProfessionAttr> 
        getProfessionList();
    dfproto.Basic.ProfessionAttr getProfession(int index);
    int getProfessionCount();
    
    // repeated .dfproto.UnitLaborAttr labor = 3;
    java.util.List<dfproto.Basic.UnitLaborAttr> 
        getLaborList();
    dfproto.Basic.UnitLaborAttr getLabor(int index);
    int getLaborCount();
  }
  public static final class ListJobSkillsOut extends
      com.google.protobuf.GeneratedMessageLite
      implements ListJobSkillsOutOrBuilder {
    // Use ListJobSkillsOut.newBuilder() to construct.
    private ListJobSkillsOut(Builder builder) {
      super(builder);
    }
    private ListJobSkillsOut(boolean noInit) {}
    
    private static final ListJobSkillsOut defaultInstance;
    public static ListJobSkillsOut getDefaultInstance() {
      return defaultInstance;
    }
    
    public ListJobSkillsOut getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    // repeated .dfproto.JobSkillAttr skill = 1;
    public static final int SKILL_FIELD_NUMBER = 1;
    private java.util.List<dfproto.Basic.JobSkillAttr> skill_;
    public java.util.List<dfproto.Basic.JobSkillAttr> getSkillList() {
      return skill_;
    }
    public java.util.List<? extends dfproto.Basic.JobSkillAttrOrBuilder> 
        getSkillOrBuilderList() {
      return skill_;
    }
    public int getSkillCount() {
      return skill_.size();
    }
    public dfproto.Basic.JobSkillAttr getSkill(int index) {
      return skill_.get(index);
    }
    public dfproto.Basic.JobSkillAttrOrBuilder getSkillOrBuilder(
        int index) {
      return skill_.get(index);
    }
    
    // repeated .dfproto.ProfessionAttr profession = 2;
    public static final int PROFESSION_FIELD_NUMBER = 2;
    private java.util.List<dfproto.Basic.ProfessionAttr> profession_;
    public java.util.List<dfproto.Basic.ProfessionAttr> getProfessionList() {
      return profession_;
    }
    public java.util.List<? extends dfproto.Basic.ProfessionAttrOrBuilder> 
        getProfessionOrBuilderList() {
      return profession_;
    }
    public int getProfessionCount() {
      return profession_.size();
    }
    public dfproto.Basic.ProfessionAttr getProfession(int index) {
      return profession_.get(index);
    }
    public dfproto.Basic.ProfessionAttrOrBuilder getProfessionOrBuilder(
        int index) {
      return profession_.get(index);
    }
    
    // repeated .dfproto.UnitLaborAttr labor = 3;
    public static final int LABOR_FIELD_NUMBER = 3;
    private java.util.List<dfproto.Basic.UnitLaborAttr> labor_;
    public java.util.List<dfproto.Basic.UnitLaborAttr> getLaborList() {
      return labor_;
    }
    public java.util.List<? extends dfproto.Basic.UnitLaborAttrOrBuilder> 
        getLaborOrBuilderList() {
      return labor_;
    }
    public int getLaborCount() {
      return labor_.size();
    }
    public dfproto.Basic.UnitLaborAttr getLabor(int index) {
      return labor_.get(index);
    }
    public dfproto.Basic.UnitLaborAttrOrBuilder getLaborOrBuilder(
        int index) {
      return labor_.get(index);
    }
    
    private void initFields() {
      skill_ = java.util.Collections.emptyList();
      profession_ = java.util.Collections.emptyList();
      labor_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      for (int i = 0; i < getSkillCount(); i++) {
        if (!getSkill(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getProfessionCount(); i++) {
        if (!getProfession(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getLaborCount(); i++) {
        if (!getLabor(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < skill_.size(); i++) {
        output.writeMessage(1, skill_.get(i));
      }
      for (int i = 0; i < profession_.size(); i++) {
        output.writeMessage(2, profession_.get(i));
      }
      for (int i = 0; i < labor_.size(); i++) {
        output.writeMessage(3, labor_.get(i));
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (int i = 0; i < skill_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, skill_.get(i));
      }
      for (int i = 0; i < profession_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, profession_.get(i));
      }
      for (int i = 0; i < labor_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, labor_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static dfproto.BasicApi.ListJobSkillsOut parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static dfproto.BasicApi.ListJobSkillsOut parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static dfproto.BasicApi.ListJobSkillsOut parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static dfproto.BasicApi.ListJobSkillsOut parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static dfproto.BasicApi.ListJobSkillsOut parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static dfproto.BasicApi.ListJobSkillsOut parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static dfproto.BasicApi.ListJobSkillsOut parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static dfproto.BasicApi.ListJobSkillsOut parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static dfproto.BasicApi.ListJobSkillsOut parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static dfproto.BasicApi.ListJobSkillsOut parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(dfproto.BasicApi.ListJobSkillsOut prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          dfproto.BasicApi.ListJobSkillsOut, Builder>
        implements dfproto.BasicApi.ListJobSkillsOutOrBuilder {
      // Construct using dfproto.BasicApi.ListJobSkillsOut.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        skill_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        profession_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        labor_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public dfproto.BasicApi.ListJobSkillsOut getDefaultInstanceForType() {
        return dfproto.BasicApi.ListJobSkillsOut.getDefaultInstance();
      }
      
      public dfproto.BasicApi.ListJobSkillsOut build() {
        dfproto.BasicApi.ListJobSkillsOut result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private dfproto.BasicApi.ListJobSkillsOut buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        dfproto.BasicApi.ListJobSkillsOut result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public dfproto.BasicApi.ListJobSkillsOut buildPartial() {
        dfproto.BasicApi.ListJobSkillsOut result = new dfproto.BasicApi.ListJobSkillsOut(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          skill_ = java.util.Collections.unmodifiableList(skill_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.skill_ = skill_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          profession_ = java.util.Collections.unmodifiableList(profession_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.profession_ = profession_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          labor_ = java.util.Collections.unmodifiableList(labor_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.labor_ = labor_;
        return result;
      }
      
      public Builder mergeFrom(dfproto.BasicApi.ListJobSkillsOut other) {
        if (other == dfproto.BasicApi.ListJobSkillsOut.getDefaultInstance()) return this;
        if (!other.skill_.isEmpty()) {
          if (skill_.isEmpty()) {
            skill_ = other.skill_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureSkillIsMutable();
            skill_.addAll(other.skill_);
          }
          
        }
        if (!other.profession_.isEmpty()) {
          if (profession_.isEmpty()) {
            profession_ = other.profession_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureProfessionIsMutable();
            profession_.addAll(other.profession_);
          }
          
        }
        if (!other.labor_.isEmpty()) {
          if (labor_.isEmpty()) {
            labor_ = other.labor_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureLaborIsMutable();
            labor_.addAll(other.labor_);
          }
          
        }
        return this;
      }
      
      public final boolean isInitialized() {
        for (int i = 0; i < getSkillCount(); i++) {
          if (!getSkill(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getProfessionCount(); i++) {
          if (!getProfession(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getLaborCount(); i++) {
          if (!getLabor(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 10: {
              dfproto.Basic.JobSkillAttr.Builder subBuilder = dfproto.Basic.JobSkillAttr.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addSkill(subBuilder.buildPartial());
              break;
            }
            case 18: {
              dfproto.Basic.ProfessionAttr.Builder subBuilder = dfproto.Basic.ProfessionAttr.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addProfession(subBuilder.buildPartial());
              break;
            }
            case 26: {
              dfproto.Basic.UnitLaborAttr.Builder subBuilder = dfproto.Basic.UnitLaborAttr.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addLabor(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated .dfproto.JobSkillAttr skill = 1;
      private java.util.List<dfproto.Basic.JobSkillAttr> skill_ =
        java.util.Collections.emptyList();
      private void ensureSkillIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          skill_ = new java.util.ArrayList<dfproto.Basic.JobSkillAttr>(skill_);
          bitField0_ |= 0x00000001;
         }
      }
      
      public java.util.List<dfproto.Basic.JobSkillAttr> getSkillList() {
        return java.util.Collections.unmodifiableList(skill_);
      }
      public int getSkillCount() {
        return skill_.size();
      }
      public dfproto.Basic.JobSkillAttr getSkill(int index) {
        return skill_.get(index);
      }
      public Builder setSkill(
          int index, dfproto.Basic.JobSkillAttr value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSkillIsMutable();
        skill_.set(index, value);
        
        return this;
      }
      public Builder setSkill(
          int index, dfproto.Basic.JobSkillAttr.Builder builderForValue) {
        ensureSkillIsMutable();
        skill_.set(index, builderForValue.build());
        
        return this;
      }
      public Builder addSkill(dfproto.Basic.JobSkillAttr value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSkillIsMutable();
        skill_.add(value);
        
        return this;
      }
      public Builder addSkill(
          int index, dfproto.Basic.JobSkillAttr value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSkillIsMutable();
        skill_.add(index, value);
        
        return this;
      }
      public Builder addSkill(
          dfproto.Basic.JobSkillAttr.Builder builderForValue) {
        ensureSkillIsMutable();
        skill_.add(builderForValue.build());
        
        return this;
      }
      public Builder addSkill(
          int index, dfproto.Basic.JobSkillAttr.Builder builderForValue) {
        ensureSkillIsMutable();
        skill_.add(index, builderForValue.build());
        
        return this;
      }
      public Builder addAllSkill(
          java.lang.Iterable<? extends dfproto.Basic.JobSkillAttr> values) {
        ensureSkillIsMutable();
        super.addAll(values, skill_);
        
        return this;
      }
      public Builder clearSkill() {
        skill_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        
        return this;
      }
      public Builder removeSkill(int index) {
        ensureSkillIsMutable();
        skill_.remove(index);
        
        return this;
      }
      
      // repeated .dfproto.ProfessionAttr profession = 2;
      private java.util.List<dfproto.Basic.ProfessionAttr> profession_ =
        java.util.Collections.emptyList();
      private void ensureProfessionIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          profession_ = new java.util.ArrayList<dfproto.Basic.ProfessionAttr>(profession_);
          bitField0_ |= 0x00000002;
         }
      }
      
      public java.util.List<dfproto.Basic.ProfessionAttr> getProfessionList() {
        return java.util.Collections.unmodifiableList(profession_);
      }
      public int getProfessionCount() {
        return profession_.size();
      }
      public dfproto.Basic.ProfessionAttr getProfession(int index) {
        return profession_.get(index);
      }
      public Builder setProfession(
          int index, dfproto.Basic.ProfessionAttr value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureProfessionIsMutable();
        profession_.set(index, value);
        
        return this;
      }
      public Builder setProfession(
          int index, dfproto.Basic.ProfessionAttr.Builder builderForValue) {
        ensureProfessionIsMutable();
        profession_.set(index, builderForValue.build());
        
        return this;
      }
      public Builder addProfession(dfproto.Basic.ProfessionAttr value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureProfessionIsMutable();
        profession_.add(value);
        
        return this;
      }
      public Builder addProfession(
          int index, dfproto.Basic.ProfessionAttr value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureProfessionIsMutable();
        profession_.add(index, value);
        
        return this;
      }
      public Builder addProfession(
          dfproto.Basic.ProfessionAttr.Builder builderForValue) {
        ensureProfessionIsMutable();
        profession_.add(builderForValue.build());
        
        return this;
      }
      public Builder addProfession(
          int index, dfproto.Basic.ProfessionAttr.Builder builderForValue) {
        ensureProfessionIsMutable();
        profession_.add(index, builderForValue.build());
        
        return this;
      }
      public Builder addAllProfession(
          java.lang.Iterable<? extends dfproto.Basic.ProfessionAttr> values) {
        ensureProfessionIsMutable();
        super.addAll(values, profession_);
        
        return this;
      }
      public Builder clearProfession() {
        profession_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        
        return this;
      }
      public Builder removeProfession(int index) {
        ensureProfessionIsMutable();
        profession_.remove(index);
        
        return this;
      }
      
      // repeated .dfproto.UnitLaborAttr labor = 3;
      private java.util.List<dfproto.Basic.UnitLaborAttr> labor_ =
        java.util.Collections.emptyList();
      private void ensureLaborIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          labor_ = new java.util.ArrayList<dfproto.Basic.UnitLaborAttr>(labor_);
          bitField0_ |= 0x00000004;
         }
      }
      
      public java.util.List<dfproto.Basic.UnitLaborAttr> getLaborList() {
        return java.util.Collections.unmodifiableList(labor_);
      }
      public int getLaborCount() {
        return labor_.size();
      }
      public dfproto.Basic.UnitLaborAttr getLabor(int index) {
        return labor_.get(index);
      }
      public Builder setLabor(
          int index, dfproto.Basic.UnitLaborAttr value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLaborIsMutable();
        labor_.set(index, value);
        
        return this;
      }
      public Builder setLabor(
          int index, dfproto.Basic.UnitLaborAttr.Builder builderForValue) {
        ensureLaborIsMutable();
        labor_.set(index, builderForValue.build());
        
        return this;
      }
      public Builder addLabor(dfproto.Basic.UnitLaborAttr value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLaborIsMutable();
        labor_.add(value);
        
        return this;
      }
      public Builder addLabor(
          int index, dfproto.Basic.UnitLaborAttr value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLaborIsMutable();
        labor_.add(index, value);
        
        return this;
      }
      public Builder addLabor(
          dfproto.Basic.UnitLaborAttr.Builder builderForValue) {
        ensureLaborIsMutable();
        labor_.add(builderForValue.build());
        
        return this;
      }
      public Builder addLabor(
          int index, dfproto.Basic.UnitLaborAttr.Builder builderForValue) {
        ensureLaborIsMutable();
        labor_.add(index, builderForValue.build());
        
        return this;
      }
      public Builder addAllLabor(
          java.lang.Iterable<? extends dfproto.Basic.UnitLaborAttr> values) {
        ensureLaborIsMutable();
        super.addAll(values, labor_);
        
        return this;
      }
      public Builder clearLabor() {
        labor_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        
        return this;
      }
      public Builder removeLabor(int index) {
        ensureLaborIsMutable();
        labor_.remove(index);
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:dfproto.ListJobSkillsOut)
    }
    
    static {
      defaultInstance = new ListJobSkillsOut(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:dfproto.ListJobSkillsOut)
  }
  
  public interface ListMaterialsInOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // optional .dfproto.BasicMaterialInfoMask mask = 1;
    boolean hasMask();
    dfproto.Basic.BasicMaterialInfoMask getMask();
    
    // repeated .dfproto.BasicMaterialId id_list = 2;
    java.util.List<dfproto.Basic.BasicMaterialId> 
        getIdListList();
    dfproto.Basic.BasicMaterialId getIdList(int index);
    int getIdListCount();
    
    // optional bool builtin = 3;
    boolean hasBuiltin();
    boolean getBuiltin();
    
    // optional bool inorganic = 4;
    boolean hasInorganic();
    boolean getInorganic();
    
    // optional bool creatures = 5;
    boolean hasCreatures();
    boolean getCreatures();
    
    // optional bool plants = 6;
    boolean hasPlants();
    boolean getPlants();
  }
  public static final class ListMaterialsIn extends
      com.google.protobuf.GeneratedMessageLite
      implements ListMaterialsInOrBuilder {
    // Use ListMaterialsIn.newBuilder() to construct.
    private ListMaterialsIn(Builder builder) {
      super(builder);
    }
    private ListMaterialsIn(boolean noInit) {}
    
    private static final ListMaterialsIn defaultInstance;
    public static ListMaterialsIn getDefaultInstance() {
      return defaultInstance;
    }
    
    public ListMaterialsIn getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // optional .dfproto.BasicMaterialInfoMask mask = 1;
    public static final int MASK_FIELD_NUMBER = 1;
    private dfproto.Basic.BasicMaterialInfoMask mask_;
    public boolean hasMask() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public dfproto.Basic.BasicMaterialInfoMask getMask() {
      return mask_;
    }
    
    // repeated .dfproto.BasicMaterialId id_list = 2;
    public static final int ID_LIST_FIELD_NUMBER = 2;
    private java.util.List<dfproto.Basic.BasicMaterialId> idList_;
    public java.util.List<dfproto.Basic.BasicMaterialId> getIdListList() {
      return idList_;
    }
    public java.util.List<? extends dfproto.Basic.BasicMaterialIdOrBuilder> 
        getIdListOrBuilderList() {
      return idList_;
    }
    public int getIdListCount() {
      return idList_.size();
    }
    public dfproto.Basic.BasicMaterialId getIdList(int index) {
      return idList_.get(index);
    }
    public dfproto.Basic.BasicMaterialIdOrBuilder getIdListOrBuilder(
        int index) {
      return idList_.get(index);
    }
    
    // optional bool builtin = 3;
    public static final int BUILTIN_FIELD_NUMBER = 3;
    private boolean builtin_;
    public boolean hasBuiltin() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public boolean getBuiltin() {
      return builtin_;
    }
    
    // optional bool inorganic = 4;
    public static final int INORGANIC_FIELD_NUMBER = 4;
    private boolean inorganic_;
    public boolean hasInorganic() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public boolean getInorganic() {
      return inorganic_;
    }
    
    // optional bool creatures = 5;
    public static final int CREATURES_FIELD_NUMBER = 5;
    private boolean creatures_;
    public boolean hasCreatures() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public boolean getCreatures() {
      return creatures_;
    }
    
    // optional bool plants = 6;
    public static final int PLANTS_FIELD_NUMBER = 6;
    private boolean plants_;
    public boolean hasPlants() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public boolean getPlants() {
      return plants_;
    }
    
    private void initFields() {
      mask_ = dfproto.Basic.BasicMaterialInfoMask.getDefaultInstance();
      idList_ = java.util.Collections.emptyList();
      builtin_ = false;
      inorganic_ = false;
      creatures_ = false;
      plants_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      for (int i = 0; i < getIdListCount(); i++) {
        if (!getIdList(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, mask_);
      }
      for (int i = 0; i < idList_.size(); i++) {
        output.writeMessage(2, idList_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(3, builtin_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(4, inorganic_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(5, creatures_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(6, plants_);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, mask_);
      }
      for (int i = 0; i < idList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, idList_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, builtin_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, inorganic_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, creatures_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, plants_);
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static dfproto.BasicApi.ListMaterialsIn parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static dfproto.BasicApi.ListMaterialsIn parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static dfproto.BasicApi.ListMaterialsIn parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static dfproto.BasicApi.ListMaterialsIn parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static dfproto.BasicApi.ListMaterialsIn parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static dfproto.BasicApi.ListMaterialsIn parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static dfproto.BasicApi.ListMaterialsIn parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static dfproto.BasicApi.ListMaterialsIn parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static dfproto.BasicApi.ListMaterialsIn parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static dfproto.BasicApi.ListMaterialsIn parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(dfproto.BasicApi.ListMaterialsIn prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          dfproto.BasicApi.ListMaterialsIn, Builder>
        implements dfproto.BasicApi.ListMaterialsInOrBuilder {
      // Construct using dfproto.BasicApi.ListMaterialsIn.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        mask_ = dfproto.Basic.BasicMaterialInfoMask.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000001);
        idList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        builtin_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        inorganic_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        creatures_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        plants_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public dfproto.BasicApi.ListMaterialsIn getDefaultInstanceForType() {
        return dfproto.BasicApi.ListMaterialsIn.getDefaultInstance();
      }
      
      public dfproto.BasicApi.ListMaterialsIn build() {
        dfproto.BasicApi.ListMaterialsIn result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private dfproto.BasicApi.ListMaterialsIn buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        dfproto.BasicApi.ListMaterialsIn result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public dfproto.BasicApi.ListMaterialsIn buildPartial() {
        dfproto.BasicApi.ListMaterialsIn result = new dfproto.BasicApi.ListMaterialsIn(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.mask_ = mask_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          idList_ = java.util.Collections.unmodifiableList(idList_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.idList_ = idList_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.builtin_ = builtin_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.inorganic_ = inorganic_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.creatures_ = creatures_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.plants_ = plants_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(dfproto.BasicApi.ListMaterialsIn other) {
        if (other == dfproto.BasicApi.ListMaterialsIn.getDefaultInstance()) return this;
        if (other.hasMask()) {
          mergeMask(other.getMask());
        }
        if (!other.idList_.isEmpty()) {
          if (idList_.isEmpty()) {
            idList_ = other.idList_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureIdListIsMutable();
            idList_.addAll(other.idList_);
          }
          
        }
        if (other.hasBuiltin()) {
          setBuiltin(other.getBuiltin());
        }
        if (other.hasInorganic()) {
          setInorganic(other.getInorganic());
        }
        if (other.hasCreatures()) {
          setCreatures(other.getCreatures());
        }
        if (other.hasPlants()) {
          setPlants(other.getPlants());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        for (int i = 0; i < getIdListCount(); i++) {
          if (!getIdList(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 10: {
              dfproto.Basic.BasicMaterialInfoMask.Builder subBuilder = dfproto.Basic.BasicMaterialInfoMask.newBuilder();
              if (hasMask()) {
                subBuilder.mergeFrom(getMask());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setMask(subBuilder.buildPartial());
              break;
            }
            case 18: {
              dfproto.Basic.BasicMaterialId.Builder subBuilder = dfproto.Basic.BasicMaterialId.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addIdList(subBuilder.buildPartial());
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              builtin_ = input.readBool();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              inorganic_ = input.readBool();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              creatures_ = input.readBool();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              plants_ = input.readBool();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .dfproto.BasicMaterialInfoMask mask = 1;
      private dfproto.Basic.BasicMaterialInfoMask mask_ = dfproto.Basic.BasicMaterialInfoMask.getDefaultInstance();
      public boolean hasMask() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public dfproto.Basic.BasicMaterialInfoMask getMask() {
        return mask_;
      }
      public Builder setMask(dfproto.Basic.BasicMaterialInfoMask value) {
        if (value == null) {
          throw new NullPointerException();
        }
        mask_ = value;
        
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setMask(
          dfproto.Basic.BasicMaterialInfoMask.Builder builderForValue) {
        mask_ = builderForValue.build();
        
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeMask(dfproto.Basic.BasicMaterialInfoMask value) {
        if (((bitField0_ & 0x00000001) == 0x00000001) &&
            mask_ != dfproto.Basic.BasicMaterialInfoMask.getDefaultInstance()) {
          mask_ =
            dfproto.Basic.BasicMaterialInfoMask.newBuilder(mask_).mergeFrom(value).buildPartial();
        } else {
          mask_ = value;
        }
        
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearMask() {
        mask_ = dfproto.Basic.BasicMaterialInfoMask.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      // repeated .dfproto.BasicMaterialId id_list = 2;
      private java.util.List<dfproto.Basic.BasicMaterialId> idList_ =
        java.util.Collections.emptyList();
      private void ensureIdListIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          idList_ = new java.util.ArrayList<dfproto.Basic.BasicMaterialId>(idList_);
          bitField0_ |= 0x00000002;
         }
      }
      
      public java.util.List<dfproto.Basic.BasicMaterialId> getIdListList() {
        return java.util.Collections.unmodifiableList(idList_);
      }
      public int getIdListCount() {
        return idList_.size();
      }
      public dfproto.Basic.BasicMaterialId getIdList(int index) {
        return idList_.get(index);
      }
      public Builder setIdList(
          int index, dfproto.Basic.BasicMaterialId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureIdListIsMutable();
        idList_.set(index, value);
        
        return this;
      }
      public Builder setIdList(
          int index, dfproto.Basic.BasicMaterialId.Builder builderForValue) {
        ensureIdListIsMutable();
        idList_.set(index, builderForValue.build());
        
        return this;
      }
      public Builder addIdList(dfproto.Basic.BasicMaterialId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureIdListIsMutable();
        idList_.add(value);
        
        return this;
      }
      public Builder addIdList(
          int index, dfproto.Basic.BasicMaterialId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureIdListIsMutable();
        idList_.add(index, value);
        
        return this;
      }
      public Builder addIdList(
          dfproto.Basic.BasicMaterialId.Builder builderForValue) {
        ensureIdListIsMutable();
        idList_.add(builderForValue.build());
        
        return this;
      }
      public Builder addIdList(
          int index, dfproto.Basic.BasicMaterialId.Builder builderForValue) {
        ensureIdListIsMutable();
        idList_.add(index, builderForValue.build());
        
        return this;
      }
      public Builder addAllIdList(
          java.lang.Iterable<? extends dfproto.Basic.BasicMaterialId> values) {
        ensureIdListIsMutable();
        super.addAll(values, idList_);
        
        return this;
      }
      public Builder clearIdList() {
        idList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        
        return this;
      }
      public Builder removeIdList(int index) {
        ensureIdListIsMutable();
        idList_.remove(index);
        
        return this;
      }
      
      // optional bool builtin = 3;
      private boolean builtin_ ;
      public boolean hasBuiltin() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public boolean getBuiltin() {
        return builtin_;
      }
      public Builder setBuiltin(boolean value) {
        bitField0_ |= 0x00000004;
        builtin_ = value;
        
        return this;
      }
      public Builder clearBuiltin() {
        bitField0_ = (bitField0_ & ~0x00000004);
        builtin_ = false;
        
        return this;
      }
      
      // optional bool inorganic = 4;
      private boolean inorganic_ ;
      public boolean hasInorganic() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public boolean getInorganic() {
        return inorganic_;
      }
      public Builder setInorganic(boolean value) {
        bitField0_ |= 0x00000008;
        inorganic_ = value;
        
        return this;
      }
      public Builder clearInorganic() {
        bitField0_ = (bitField0_ & ~0x00000008);
        inorganic_ = false;
        
        return this;
      }
      
      // optional bool creatures = 5;
      private boolean creatures_ ;
      public boolean hasCreatures() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public boolean getCreatures() {
        return creatures_;
      }
      public Builder setCreatures(boolean value) {
        bitField0_ |= 0x00000010;
        creatures_ = value;
        
        return this;
      }
      public Builder clearCreatures() {
        bitField0_ = (bitField0_ & ~0x00000010);
        creatures_ = false;
        
        return this;
      }
      
      // optional bool plants = 6;
      private boolean plants_ ;
      public boolean hasPlants() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public boolean getPlants() {
        return plants_;
      }
      public Builder setPlants(boolean value) {
        bitField0_ |= 0x00000020;
        plants_ = value;
        
        return this;
      }
      public Builder clearPlants() {
        bitField0_ = (bitField0_ & ~0x00000020);
        plants_ = false;
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:dfproto.ListMaterialsIn)
    }
    
    static {
      defaultInstance = new ListMaterialsIn(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:dfproto.ListMaterialsIn)
  }
  
  public interface ListMaterialsOutOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // repeated .dfproto.BasicMaterialInfo value = 1;
    java.util.List<dfproto.Basic.BasicMaterialInfo> 
        getValueList();
    dfproto.Basic.BasicMaterialInfo getValue(int index);
    int getValueCount();
  }
  public static final class ListMaterialsOut extends
      com.google.protobuf.GeneratedMessageLite
      implements ListMaterialsOutOrBuilder {
    // Use ListMaterialsOut.newBuilder() to construct.
    private ListMaterialsOut(Builder builder) {
      super(builder);
    }
    private ListMaterialsOut(boolean noInit) {}
    
    private static final ListMaterialsOut defaultInstance;
    public static ListMaterialsOut getDefaultInstance() {
      return defaultInstance;
    }
    
    public ListMaterialsOut getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    // repeated .dfproto.BasicMaterialInfo value = 1;
    public static final int VALUE_FIELD_NUMBER = 1;
    private java.util.List<dfproto.Basic.BasicMaterialInfo> value_;
    public java.util.List<dfproto.Basic.BasicMaterialInfo> getValueList() {
      return value_;
    }
    public java.util.List<? extends dfproto.Basic.BasicMaterialInfoOrBuilder> 
        getValueOrBuilderList() {
      return value_;
    }
    public int getValueCount() {
      return value_.size();
    }
    public dfproto.Basic.BasicMaterialInfo getValue(int index) {
      return value_.get(index);
    }
    public dfproto.Basic.BasicMaterialInfoOrBuilder getValueOrBuilder(
        int index) {
      return value_.get(index);
    }
    
    private void initFields() {
      value_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      for (int i = 0; i < getValueCount(); i++) {
        if (!getValue(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < value_.size(); i++) {
        output.writeMessage(1, value_.get(i));
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (int i = 0; i < value_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, value_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static dfproto.BasicApi.ListMaterialsOut parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static dfproto.BasicApi.ListMaterialsOut parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static dfproto.BasicApi.ListMaterialsOut parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static dfproto.BasicApi.ListMaterialsOut parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static dfproto.BasicApi.ListMaterialsOut parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static dfproto.BasicApi.ListMaterialsOut parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static dfproto.BasicApi.ListMaterialsOut parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static dfproto.BasicApi.ListMaterialsOut parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static dfproto.BasicApi.ListMaterialsOut parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static dfproto.BasicApi.ListMaterialsOut parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(dfproto.BasicApi.ListMaterialsOut prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          dfproto.BasicApi.ListMaterialsOut, Builder>
        implements dfproto.BasicApi.ListMaterialsOutOrBuilder {
      // Construct using dfproto.BasicApi.ListMaterialsOut.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        value_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public dfproto.BasicApi.ListMaterialsOut getDefaultInstanceForType() {
        return dfproto.BasicApi.ListMaterialsOut.getDefaultInstance();
      }
      
      public dfproto.BasicApi.ListMaterialsOut build() {
        dfproto.BasicApi.ListMaterialsOut result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private dfproto.BasicApi.ListMaterialsOut buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        dfproto.BasicApi.ListMaterialsOut result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public dfproto.BasicApi.ListMaterialsOut buildPartial() {
        dfproto.BasicApi.ListMaterialsOut result = new dfproto.BasicApi.ListMaterialsOut(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          value_ = java.util.Collections.unmodifiableList(value_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.value_ = value_;
        return result;
      }
      
      public Builder mergeFrom(dfproto.BasicApi.ListMaterialsOut other) {
        if (other == dfproto.BasicApi.ListMaterialsOut.getDefaultInstance()) return this;
        if (!other.value_.isEmpty()) {
          if (value_.isEmpty()) {
            value_ = other.value_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureValueIsMutable();
            value_.addAll(other.value_);
          }
          
        }
        return this;
      }
      
      public final boolean isInitialized() {
        for (int i = 0; i < getValueCount(); i++) {
          if (!getValue(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 10: {
              dfproto.Basic.BasicMaterialInfo.Builder subBuilder = dfproto.Basic.BasicMaterialInfo.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addValue(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated .dfproto.BasicMaterialInfo value = 1;
      private java.util.List<dfproto.Basic.BasicMaterialInfo> value_ =
        java.util.Collections.emptyList();
      private void ensureValueIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          value_ = new java.util.ArrayList<dfproto.Basic.BasicMaterialInfo>(value_);
          bitField0_ |= 0x00000001;
         }
      }
      
      public java.util.List<dfproto.Basic.BasicMaterialInfo> getValueList() {
        return java.util.Collections.unmodifiableList(value_);
      }
      public int getValueCount() {
        return value_.size();
      }
      public dfproto.Basic.BasicMaterialInfo getValue(int index) {
        return value_.get(index);
      }
      public Builder setValue(
          int index, dfproto.Basic.BasicMaterialInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureValueIsMutable();
        value_.set(index, value);
        
        return this;
      }
      public Builder setValue(
          int index, dfproto.Basic.BasicMaterialInfo.Builder builderForValue) {
        ensureValueIsMutable();
        value_.set(index, builderForValue.build());
        
        return this;
      }
      public Builder addValue(dfproto.Basic.BasicMaterialInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureValueIsMutable();
        value_.add(value);
        
        return this;
      }
      public Builder addValue(
          int index, dfproto.Basic.BasicMaterialInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureValueIsMutable();
        value_.add(index, value);
        
        return this;
      }
      public Builder addValue(
          dfproto.Basic.BasicMaterialInfo.Builder builderForValue) {
        ensureValueIsMutable();
        value_.add(builderForValue.build());
        
        return this;
      }
      public Builder addValue(
          int index, dfproto.Basic.BasicMaterialInfo.Builder builderForValue) {
        ensureValueIsMutable();
        value_.add(index, builderForValue.build());
        
        return this;
      }
      public Builder addAllValue(
          java.lang.Iterable<? extends dfproto.Basic.BasicMaterialInfo> values) {
        ensureValueIsMutable();
        super.addAll(values, value_);
        
        return this;
      }
      public Builder clearValue() {
        value_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        
        return this;
      }
      public Builder removeValue(int index) {
        ensureValueIsMutable();
        value_.remove(index);
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:dfproto.ListMaterialsOut)
    }
    
    static {
      defaultInstance = new ListMaterialsOut(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:dfproto.ListMaterialsOut)
  }
  
  public interface ListUnitsInOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // optional .dfproto.BasicUnitInfoMask mask = 1;
    boolean hasMask();
    dfproto.Basic.BasicUnitInfoMask getMask();
    
    // repeated int32 id_list = 2;
    java.util.List<java.lang.Integer> getIdListList();
    int getIdListCount();
    int getIdList(int index);
    
    // optional bool scan_all = 5;
    boolean hasScanAll();
    boolean getScanAll();
    
    // optional int32 race = 3;
    boolean hasRace();
    int getRace();
    
    // optional int32 civ_id = 4;
    boolean hasCivId();
    int getCivId();
    
    // optional bool dead = 6;
    boolean hasDead();
    boolean getDead();
    
    // optional bool alive = 7;
    boolean hasAlive();
    boolean getAlive();
    
    // optional bool sane = 8;
    boolean hasSane();
    boolean getSane();
  }
  public static final class ListUnitsIn extends
      com.google.protobuf.GeneratedMessageLite
      implements ListUnitsInOrBuilder {
    // Use ListUnitsIn.newBuilder() to construct.
    private ListUnitsIn(Builder builder) {
      super(builder);
    }
    private ListUnitsIn(boolean noInit) {}
    
    private static final ListUnitsIn defaultInstance;
    public static ListUnitsIn getDefaultInstance() {
      return defaultInstance;
    }
    
    public ListUnitsIn getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // optional .dfproto.BasicUnitInfoMask mask = 1;
    public static final int MASK_FIELD_NUMBER = 1;
    private dfproto.Basic.BasicUnitInfoMask mask_;
    public boolean hasMask() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public dfproto.Basic.BasicUnitInfoMask getMask() {
      return mask_;
    }
    
    // repeated int32 id_list = 2;
    public static final int ID_LIST_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> idList_;
    public java.util.List<java.lang.Integer>
        getIdListList() {
      return idList_;
    }
    public int getIdListCount() {
      return idList_.size();
    }
    public int getIdList(int index) {
      return idList_.get(index);
    }
    
    // optional bool scan_all = 5;
    public static final int SCAN_ALL_FIELD_NUMBER = 5;
    private boolean scanAll_;
    public boolean hasScanAll() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public boolean getScanAll() {
      return scanAll_;
    }
    
    // optional int32 race = 3;
    public static final int RACE_FIELD_NUMBER = 3;
    private int race_;
    public boolean hasRace() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getRace() {
      return race_;
    }
    
    // optional int32 civ_id = 4;
    public static final int CIV_ID_FIELD_NUMBER = 4;
    private int civId_;
    public boolean hasCivId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getCivId() {
      return civId_;
    }
    
    // optional bool dead = 6;
    public static final int DEAD_FIELD_NUMBER = 6;
    private boolean dead_;
    public boolean hasDead() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public boolean getDead() {
      return dead_;
    }
    
    // optional bool alive = 7;
    public static final int ALIVE_FIELD_NUMBER = 7;
    private boolean alive_;
    public boolean hasAlive() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public boolean getAlive() {
      return alive_;
    }
    
    // optional bool sane = 8;
    public static final int SANE_FIELD_NUMBER = 8;
    private boolean sane_;
    public boolean hasSane() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public boolean getSane() {
      return sane_;
    }
    
    private void initFields() {
      mask_ = dfproto.Basic.BasicUnitInfoMask.getDefaultInstance();
      idList_ = java.util.Collections.emptyList();;
      scanAll_ = false;
      race_ = 0;
      civId_ = 0;
      dead_ = false;
      alive_ = false;
      sane_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, mask_);
      }
      for (int i = 0; i < idList_.size(); i++) {
        output.writeInt32(2, idList_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, race_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, civId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(5, scanAll_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(6, dead_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(7, alive_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(8, sane_);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, mask_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < idList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(idList_.get(i));
        }
        size += dataSize;
        size += 1 * getIdListList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, race_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, civId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, scanAll_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, dead_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, alive_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, sane_);
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static dfproto.BasicApi.ListUnitsIn parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static dfproto.BasicApi.ListUnitsIn parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static dfproto.BasicApi.ListUnitsIn parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static dfproto.BasicApi.ListUnitsIn parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static dfproto.BasicApi.ListUnitsIn parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static dfproto.BasicApi.ListUnitsIn parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static dfproto.BasicApi.ListUnitsIn parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static dfproto.BasicApi.ListUnitsIn parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static dfproto.BasicApi.ListUnitsIn parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static dfproto.BasicApi.ListUnitsIn parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(dfproto.BasicApi.ListUnitsIn prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          dfproto.BasicApi.ListUnitsIn, Builder>
        implements dfproto.BasicApi.ListUnitsInOrBuilder {
      // Construct using dfproto.BasicApi.ListUnitsIn.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        mask_ = dfproto.Basic.BasicUnitInfoMask.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000001);
        idList_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000002);
        scanAll_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        race_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        civId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        dead_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        alive_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        sane_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public dfproto.BasicApi.ListUnitsIn getDefaultInstanceForType() {
        return dfproto.BasicApi.ListUnitsIn.getDefaultInstance();
      }
      
      public dfproto.BasicApi.ListUnitsIn build() {
        dfproto.BasicApi.ListUnitsIn result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private dfproto.BasicApi.ListUnitsIn buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        dfproto.BasicApi.ListUnitsIn result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public dfproto.BasicApi.ListUnitsIn buildPartial() {
        dfproto.BasicApi.ListUnitsIn result = new dfproto.BasicApi.ListUnitsIn(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.mask_ = mask_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          idList_ = java.util.Collections.unmodifiableList(idList_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.idList_ = idList_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.scanAll_ = scanAll_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.race_ = race_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.civId_ = civId_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.dead_ = dead_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.alive_ = alive_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.sane_ = sane_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(dfproto.BasicApi.ListUnitsIn other) {
        if (other == dfproto.BasicApi.ListUnitsIn.getDefaultInstance()) return this;
        if (other.hasMask()) {
          mergeMask(other.getMask());
        }
        if (!other.idList_.isEmpty()) {
          if (idList_.isEmpty()) {
            idList_ = other.idList_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureIdListIsMutable();
            idList_.addAll(other.idList_);
          }
          
        }
        if (other.hasScanAll()) {
          setScanAll(other.getScanAll());
        }
        if (other.hasRace()) {
          setRace(other.getRace());
        }
        if (other.hasCivId()) {
          setCivId(other.getCivId());
        }
        if (other.hasDead()) {
          setDead(other.getDead());
        }
        if (other.hasAlive()) {
          setAlive(other.getAlive());
        }
        if (other.hasSane()) {
          setSane(other.getSane());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 10: {
              dfproto.Basic.BasicUnitInfoMask.Builder subBuilder = dfproto.Basic.BasicUnitInfoMask.newBuilder();
              if (hasMask()) {
                subBuilder.mergeFrom(getMask());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setMask(subBuilder.buildPartial());
              break;
            }
            case 16: {
              ensureIdListIsMutable();
              idList_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addIdList(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              bitField0_ |= 0x00000008;
              race_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000010;
              civId_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000004;
              scanAll_ = input.readBool();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              dead_ = input.readBool();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              alive_ = input.readBool();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              sane_ = input.readBool();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .dfproto.BasicUnitInfoMask mask = 1;
      private dfproto.Basic.BasicUnitInfoMask mask_ = dfproto.Basic.BasicUnitInfoMask.getDefaultInstance();
      public boolean hasMask() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public dfproto.Basic.BasicUnitInfoMask getMask() {
        return mask_;
      }
      public Builder setMask(dfproto.Basic.BasicUnitInfoMask value) {
        if (value == null) {
          throw new NullPointerException();
        }
        mask_ = value;
        
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setMask(
          dfproto.Basic.BasicUnitInfoMask.Builder builderForValue) {
        mask_ = builderForValue.build();
        
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeMask(dfproto.Basic.BasicUnitInfoMask value) {
        if (((bitField0_ & 0x00000001) == 0x00000001) &&
            mask_ != dfproto.Basic.BasicUnitInfoMask.getDefaultInstance()) {
          mask_ =
            dfproto.Basic.BasicUnitInfoMask.newBuilder(mask_).mergeFrom(value).buildPartial();
        } else {
          mask_ = value;
        }
        
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearMask() {
        mask_ = dfproto.Basic.BasicUnitInfoMask.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      // repeated int32 id_list = 2;
      private java.util.List<java.lang.Integer> idList_ = java.util.Collections.emptyList();;
      private void ensureIdListIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          idList_ = new java.util.ArrayList<java.lang.Integer>(idList_);
          bitField0_ |= 0x00000002;
         }
      }
      public java.util.List<java.lang.Integer>
          getIdListList() {
        return java.util.Collections.unmodifiableList(idList_);
      }
      public int getIdListCount() {
        return idList_.size();
      }
      public int getIdList(int index) {
        return idList_.get(index);
      }
      public Builder setIdList(
          int index, int value) {
        ensureIdListIsMutable();
        idList_.set(index, value);
        
        return this;
      }
      public Builder addIdList(int value) {
        ensureIdListIsMutable();
        idList_.add(value);
        
        return this;
      }
      public Builder addAllIdList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureIdListIsMutable();
        super.addAll(values, idList_);
        
        return this;
      }
      public Builder clearIdList() {
        idList_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000002);
        
        return this;
      }
      
      // optional bool scan_all = 5;
      private boolean scanAll_ ;
      public boolean hasScanAll() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public boolean getScanAll() {
        return scanAll_;
      }
      public Builder setScanAll(boolean value) {
        bitField0_ |= 0x00000004;
        scanAll_ = value;
        
        return this;
      }
      public Builder clearScanAll() {
        bitField0_ = (bitField0_ & ~0x00000004);
        scanAll_ = false;
        
        return this;
      }
      
      // optional int32 race = 3;
      private int race_ ;
      public boolean hasRace() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getRace() {
        return race_;
      }
      public Builder setRace(int value) {
        bitField0_ |= 0x00000008;
        race_ = value;
        
        return this;
      }
      public Builder clearRace() {
        bitField0_ = (bitField0_ & ~0x00000008);
        race_ = 0;
        
        return this;
      }
      
      // optional int32 civ_id = 4;
      private int civId_ ;
      public boolean hasCivId() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getCivId() {
        return civId_;
      }
      public Builder setCivId(int value) {
        bitField0_ |= 0x00000010;
        civId_ = value;
        
        return this;
      }
      public Builder clearCivId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        civId_ = 0;
        
        return this;
      }
      
      // optional bool dead = 6;
      private boolean dead_ ;
      public boolean hasDead() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public boolean getDead() {
        return dead_;
      }
      public Builder setDead(boolean value) {
        bitField0_ |= 0x00000020;
        dead_ = value;
        
        return this;
      }
      public Builder clearDead() {
        bitField0_ = (bitField0_ & ~0x00000020);
        dead_ = false;
        
        return this;
      }
      
      // optional bool alive = 7;
      private boolean alive_ ;
      public boolean hasAlive() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public boolean getAlive() {
        return alive_;
      }
      public Builder setAlive(boolean value) {
        bitField0_ |= 0x00000040;
        alive_ = value;
        
        return this;
      }
      public Builder clearAlive() {
        bitField0_ = (bitField0_ & ~0x00000040);
        alive_ = false;
        
        return this;
      }
      
      // optional bool sane = 8;
      private boolean sane_ ;
      public boolean hasSane() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public boolean getSane() {
        return sane_;
      }
      public Builder setSane(boolean value) {
        bitField0_ |= 0x00000080;
        sane_ = value;
        
        return this;
      }
      public Builder clearSane() {
        bitField0_ = (bitField0_ & ~0x00000080);
        sane_ = false;
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:dfproto.ListUnitsIn)
    }
    
    static {
      defaultInstance = new ListUnitsIn(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:dfproto.ListUnitsIn)
  }
  
  public interface ListUnitsOutOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // repeated .dfproto.BasicUnitInfo value = 1;
    java.util.List<dfproto.Basic.BasicUnitInfo> 
        getValueList();
    dfproto.Basic.BasicUnitInfo getValue(int index);
    int getValueCount();
  }
  public static final class ListUnitsOut extends
      com.google.protobuf.GeneratedMessageLite
      implements ListUnitsOutOrBuilder {
    // Use ListUnitsOut.newBuilder() to construct.
    private ListUnitsOut(Builder builder) {
      super(builder);
    }
    private ListUnitsOut(boolean noInit) {}
    
    private static final ListUnitsOut defaultInstance;
    public static ListUnitsOut getDefaultInstance() {
      return defaultInstance;
    }
    
    public ListUnitsOut getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    // repeated .dfproto.BasicUnitInfo value = 1;
    public static final int VALUE_FIELD_NUMBER = 1;
    private java.util.List<dfproto.Basic.BasicUnitInfo> value_;
    public java.util.List<dfproto.Basic.BasicUnitInfo> getValueList() {
      return value_;
    }
    public java.util.List<? extends dfproto.Basic.BasicUnitInfoOrBuilder> 
        getValueOrBuilderList() {
      return value_;
    }
    public int getValueCount() {
      return value_.size();
    }
    public dfproto.Basic.BasicUnitInfo getValue(int index) {
      return value_.get(index);
    }
    public dfproto.Basic.BasicUnitInfoOrBuilder getValueOrBuilder(
        int index) {
      return value_.get(index);
    }
    
    private void initFields() {
      value_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      for (int i = 0; i < getValueCount(); i++) {
        if (!getValue(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < value_.size(); i++) {
        output.writeMessage(1, value_.get(i));
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (int i = 0; i < value_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, value_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static dfproto.BasicApi.ListUnitsOut parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static dfproto.BasicApi.ListUnitsOut parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static dfproto.BasicApi.ListUnitsOut parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static dfproto.BasicApi.ListUnitsOut parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static dfproto.BasicApi.ListUnitsOut parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static dfproto.BasicApi.ListUnitsOut parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static dfproto.BasicApi.ListUnitsOut parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static dfproto.BasicApi.ListUnitsOut parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static dfproto.BasicApi.ListUnitsOut parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static dfproto.BasicApi.ListUnitsOut parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(dfproto.BasicApi.ListUnitsOut prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          dfproto.BasicApi.ListUnitsOut, Builder>
        implements dfproto.BasicApi.ListUnitsOutOrBuilder {
      // Construct using dfproto.BasicApi.ListUnitsOut.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        value_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public dfproto.BasicApi.ListUnitsOut getDefaultInstanceForType() {
        return dfproto.BasicApi.ListUnitsOut.getDefaultInstance();
      }
      
      public dfproto.BasicApi.ListUnitsOut build() {
        dfproto.BasicApi.ListUnitsOut result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private dfproto.BasicApi.ListUnitsOut buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        dfproto.BasicApi.ListUnitsOut result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public dfproto.BasicApi.ListUnitsOut buildPartial() {
        dfproto.BasicApi.ListUnitsOut result = new dfproto.BasicApi.ListUnitsOut(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          value_ = java.util.Collections.unmodifiableList(value_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.value_ = value_;
        return result;
      }
      
      public Builder mergeFrom(dfproto.BasicApi.ListUnitsOut other) {
        if (other == dfproto.BasicApi.ListUnitsOut.getDefaultInstance()) return this;
        if (!other.value_.isEmpty()) {
          if (value_.isEmpty()) {
            value_ = other.value_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureValueIsMutable();
            value_.addAll(other.value_);
          }
          
        }
        return this;
      }
      
      public final boolean isInitialized() {
        for (int i = 0; i < getValueCount(); i++) {
          if (!getValue(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 10: {
              dfproto.Basic.BasicUnitInfo.Builder subBuilder = dfproto.Basic.BasicUnitInfo.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addValue(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated .dfproto.BasicUnitInfo value = 1;
      private java.util.List<dfproto.Basic.BasicUnitInfo> value_ =
        java.util.Collections.emptyList();
      private void ensureValueIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          value_ = new java.util.ArrayList<dfproto.Basic.BasicUnitInfo>(value_);
          bitField0_ |= 0x00000001;
         }
      }
      
      public java.util.List<dfproto.Basic.BasicUnitInfo> getValueList() {
        return java.util.Collections.unmodifiableList(value_);
      }
      public int getValueCount() {
        return value_.size();
      }
      public dfproto.Basic.BasicUnitInfo getValue(int index) {
        return value_.get(index);
      }
      public Builder setValue(
          int index, dfproto.Basic.BasicUnitInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureValueIsMutable();
        value_.set(index, value);
        
        return this;
      }
      public Builder setValue(
          int index, dfproto.Basic.BasicUnitInfo.Builder builderForValue) {
        ensureValueIsMutable();
        value_.set(index, builderForValue.build());
        
        return this;
      }
      public Builder addValue(dfproto.Basic.BasicUnitInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureValueIsMutable();
        value_.add(value);
        
        return this;
      }
      public Builder addValue(
          int index, dfproto.Basic.BasicUnitInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureValueIsMutable();
        value_.add(index, value);
        
        return this;
      }
      public Builder addValue(
          dfproto.Basic.BasicUnitInfo.Builder builderForValue) {
        ensureValueIsMutable();
        value_.add(builderForValue.build());
        
        return this;
      }
      public Builder addValue(
          int index, dfproto.Basic.BasicUnitInfo.Builder builderForValue) {
        ensureValueIsMutable();
        value_.add(index, builderForValue.build());
        
        return this;
      }
      public Builder addAllValue(
          java.lang.Iterable<? extends dfproto.Basic.BasicUnitInfo> values) {
        ensureValueIsMutable();
        super.addAll(values, value_);
        
        return this;
      }
      public Builder clearValue() {
        value_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        
        return this;
      }
      public Builder removeValue(int index) {
        ensureValueIsMutable();
        value_.remove(index);
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:dfproto.ListUnitsOut)
    }
    
    static {
      defaultInstance = new ListUnitsOut(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:dfproto.ListUnitsOut)
  }
  
  public interface ListSquadsInOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
  }
  public static final class ListSquadsIn extends
      com.google.protobuf.GeneratedMessageLite
      implements ListSquadsInOrBuilder {
    // Use ListSquadsIn.newBuilder() to construct.
    private ListSquadsIn(Builder builder) {
      super(builder);
    }
    private ListSquadsIn(boolean noInit) {}
    
    private static final ListSquadsIn defaultInstance;
    public static ListSquadsIn getDefaultInstance() {
      return defaultInstance;
    }
    
    public ListSquadsIn getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static dfproto.BasicApi.ListSquadsIn parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static dfproto.BasicApi.ListSquadsIn parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static dfproto.BasicApi.ListSquadsIn parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static dfproto.BasicApi.ListSquadsIn parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static dfproto.BasicApi.ListSquadsIn parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static dfproto.BasicApi.ListSquadsIn parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static dfproto.BasicApi.ListSquadsIn parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static dfproto.BasicApi.ListSquadsIn parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static dfproto.BasicApi.ListSquadsIn parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static dfproto.BasicApi.ListSquadsIn parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(dfproto.BasicApi.ListSquadsIn prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          dfproto.BasicApi.ListSquadsIn, Builder>
        implements dfproto.BasicApi.ListSquadsInOrBuilder {
      // Construct using dfproto.BasicApi.ListSquadsIn.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public dfproto.BasicApi.ListSquadsIn getDefaultInstanceForType() {
        return dfproto.BasicApi.ListSquadsIn.getDefaultInstance();
      }
      
      public dfproto.BasicApi.ListSquadsIn build() {
        dfproto.BasicApi.ListSquadsIn result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private dfproto.BasicApi.ListSquadsIn buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        dfproto.BasicApi.ListSquadsIn result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public dfproto.BasicApi.ListSquadsIn buildPartial() {
        dfproto.BasicApi.ListSquadsIn result = new dfproto.BasicApi.ListSquadsIn(this);
        return result;
      }
      
      public Builder mergeFrom(dfproto.BasicApi.ListSquadsIn other) {
        if (other == dfproto.BasicApi.ListSquadsIn.getDefaultInstance()) return this;
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
          }
        }
      }
      
      
      // @@protoc_insertion_point(builder_scope:dfproto.ListSquadsIn)
    }
    
    static {
      defaultInstance = new ListSquadsIn(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:dfproto.ListSquadsIn)
  }
  
  public interface ListSquadsOutOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // repeated .dfproto.BasicSquadInfo value = 1;
    java.util.List<dfproto.Basic.BasicSquadInfo> 
        getValueList();
    dfproto.Basic.BasicSquadInfo getValue(int index);
    int getValueCount();
  }
  public static final class ListSquadsOut extends
      com.google.protobuf.GeneratedMessageLite
      implements ListSquadsOutOrBuilder {
    // Use ListSquadsOut.newBuilder() to construct.
    private ListSquadsOut(Builder builder) {
      super(builder);
    }
    private ListSquadsOut(boolean noInit) {}
    
    private static final ListSquadsOut defaultInstance;
    public static ListSquadsOut getDefaultInstance() {
      return defaultInstance;
    }
    
    public ListSquadsOut getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    // repeated .dfproto.BasicSquadInfo value = 1;
    public static final int VALUE_FIELD_NUMBER = 1;
    private java.util.List<dfproto.Basic.BasicSquadInfo> value_;
    public java.util.List<dfproto.Basic.BasicSquadInfo> getValueList() {
      return value_;
    }
    public java.util.List<? extends dfproto.Basic.BasicSquadInfoOrBuilder> 
        getValueOrBuilderList() {
      return value_;
    }
    public int getValueCount() {
      return value_.size();
    }
    public dfproto.Basic.BasicSquadInfo getValue(int index) {
      return value_.get(index);
    }
    public dfproto.Basic.BasicSquadInfoOrBuilder getValueOrBuilder(
        int index) {
      return value_.get(index);
    }
    
    private void initFields() {
      value_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      for (int i = 0; i < getValueCount(); i++) {
        if (!getValue(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < value_.size(); i++) {
        output.writeMessage(1, value_.get(i));
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (int i = 0; i < value_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, value_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static dfproto.BasicApi.ListSquadsOut parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static dfproto.BasicApi.ListSquadsOut parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static dfproto.BasicApi.ListSquadsOut parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static dfproto.BasicApi.ListSquadsOut parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static dfproto.BasicApi.ListSquadsOut parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static dfproto.BasicApi.ListSquadsOut parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static dfproto.BasicApi.ListSquadsOut parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static dfproto.BasicApi.ListSquadsOut parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static dfproto.BasicApi.ListSquadsOut parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static dfproto.BasicApi.ListSquadsOut parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(dfproto.BasicApi.ListSquadsOut prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          dfproto.BasicApi.ListSquadsOut, Builder>
        implements dfproto.BasicApi.ListSquadsOutOrBuilder {
      // Construct using dfproto.BasicApi.ListSquadsOut.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        value_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public dfproto.BasicApi.ListSquadsOut getDefaultInstanceForType() {
        return dfproto.BasicApi.ListSquadsOut.getDefaultInstance();
      }
      
      public dfproto.BasicApi.ListSquadsOut build() {
        dfproto.BasicApi.ListSquadsOut result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private dfproto.BasicApi.ListSquadsOut buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        dfproto.BasicApi.ListSquadsOut result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public dfproto.BasicApi.ListSquadsOut buildPartial() {
        dfproto.BasicApi.ListSquadsOut result = new dfproto.BasicApi.ListSquadsOut(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          value_ = java.util.Collections.unmodifiableList(value_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.value_ = value_;
        return result;
      }
      
      public Builder mergeFrom(dfproto.BasicApi.ListSquadsOut other) {
        if (other == dfproto.BasicApi.ListSquadsOut.getDefaultInstance()) return this;
        if (!other.value_.isEmpty()) {
          if (value_.isEmpty()) {
            value_ = other.value_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureValueIsMutable();
            value_.addAll(other.value_);
          }
          
        }
        return this;
      }
      
      public final boolean isInitialized() {
        for (int i = 0; i < getValueCount(); i++) {
          if (!getValue(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 10: {
              dfproto.Basic.BasicSquadInfo.Builder subBuilder = dfproto.Basic.BasicSquadInfo.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addValue(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated .dfproto.BasicSquadInfo value = 1;
      private java.util.List<dfproto.Basic.BasicSquadInfo> value_ =
        java.util.Collections.emptyList();
      private void ensureValueIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          value_ = new java.util.ArrayList<dfproto.Basic.BasicSquadInfo>(value_);
          bitField0_ |= 0x00000001;
         }
      }
      
      public java.util.List<dfproto.Basic.BasicSquadInfo> getValueList() {
        return java.util.Collections.unmodifiableList(value_);
      }
      public int getValueCount() {
        return value_.size();
      }
      public dfproto.Basic.BasicSquadInfo getValue(int index) {
        return value_.get(index);
      }
      public Builder setValue(
          int index, dfproto.Basic.BasicSquadInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureValueIsMutable();
        value_.set(index, value);
        
        return this;
      }
      public Builder setValue(
          int index, dfproto.Basic.BasicSquadInfo.Builder builderForValue) {
        ensureValueIsMutable();
        value_.set(index, builderForValue.build());
        
        return this;
      }
      public Builder addValue(dfproto.Basic.BasicSquadInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureValueIsMutable();
        value_.add(value);
        
        return this;
      }
      public Builder addValue(
          int index, dfproto.Basic.BasicSquadInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureValueIsMutable();
        value_.add(index, value);
        
        return this;
      }
      public Builder addValue(
          dfproto.Basic.BasicSquadInfo.Builder builderForValue) {
        ensureValueIsMutable();
        value_.add(builderForValue.build());
        
        return this;
      }
      public Builder addValue(
          int index, dfproto.Basic.BasicSquadInfo.Builder builderForValue) {
        ensureValueIsMutable();
        value_.add(index, builderForValue.build());
        
        return this;
      }
      public Builder addAllValue(
          java.lang.Iterable<? extends dfproto.Basic.BasicSquadInfo> values) {
        ensureValueIsMutable();
        super.addAll(values, value_);
        
        return this;
      }
      public Builder clearValue() {
        value_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        
        return this;
      }
      public Builder removeValue(int index) {
        ensureValueIsMutable();
        value_.remove(index);
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:dfproto.ListSquadsOut)
    }
    
    static {
      defaultInstance = new ListSquadsOut(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:dfproto.ListSquadsOut)
  }
  
  public interface SetUnitLaborsInOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // repeated .dfproto.UnitLaborState change = 1;
    java.util.List<dfproto.Basic.UnitLaborState> 
        getChangeList();
    dfproto.Basic.UnitLaborState getChange(int index);
    int getChangeCount();
  }
  public static final class SetUnitLaborsIn extends
      com.google.protobuf.GeneratedMessageLite
      implements SetUnitLaborsInOrBuilder {
    // Use SetUnitLaborsIn.newBuilder() to construct.
    private SetUnitLaborsIn(Builder builder) {
      super(builder);
    }
    private SetUnitLaborsIn(boolean noInit) {}
    
    private static final SetUnitLaborsIn defaultInstance;
    public static SetUnitLaborsIn getDefaultInstance() {
      return defaultInstance;
    }
    
    public SetUnitLaborsIn getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    // repeated .dfproto.UnitLaborState change = 1;
    public static final int CHANGE_FIELD_NUMBER = 1;
    private java.util.List<dfproto.Basic.UnitLaborState> change_;
    public java.util.List<dfproto.Basic.UnitLaborState> getChangeList() {
      return change_;
    }
    public java.util.List<? extends dfproto.Basic.UnitLaborStateOrBuilder> 
        getChangeOrBuilderList() {
      return change_;
    }
    public int getChangeCount() {
      return change_.size();
    }
    public dfproto.Basic.UnitLaborState getChange(int index) {
      return change_.get(index);
    }
    public dfproto.Basic.UnitLaborStateOrBuilder getChangeOrBuilder(
        int index) {
      return change_.get(index);
    }
    
    private void initFields() {
      change_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      for (int i = 0; i < getChangeCount(); i++) {
        if (!getChange(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < change_.size(); i++) {
        output.writeMessage(1, change_.get(i));
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (int i = 0; i < change_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, change_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static dfproto.BasicApi.SetUnitLaborsIn parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static dfproto.BasicApi.SetUnitLaborsIn parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static dfproto.BasicApi.SetUnitLaborsIn parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static dfproto.BasicApi.SetUnitLaborsIn parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static dfproto.BasicApi.SetUnitLaborsIn parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static dfproto.BasicApi.SetUnitLaborsIn parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static dfproto.BasicApi.SetUnitLaborsIn parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static dfproto.BasicApi.SetUnitLaborsIn parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static dfproto.BasicApi.SetUnitLaborsIn parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static dfproto.BasicApi.SetUnitLaborsIn parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(dfproto.BasicApi.SetUnitLaborsIn prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          dfproto.BasicApi.SetUnitLaborsIn, Builder>
        implements dfproto.BasicApi.SetUnitLaborsInOrBuilder {
      // Construct using dfproto.BasicApi.SetUnitLaborsIn.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        change_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public dfproto.BasicApi.SetUnitLaborsIn getDefaultInstanceForType() {
        return dfproto.BasicApi.SetUnitLaborsIn.getDefaultInstance();
      }
      
      public dfproto.BasicApi.SetUnitLaborsIn build() {
        dfproto.BasicApi.SetUnitLaborsIn result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private dfproto.BasicApi.SetUnitLaborsIn buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        dfproto.BasicApi.SetUnitLaborsIn result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public dfproto.BasicApi.SetUnitLaborsIn buildPartial() {
        dfproto.BasicApi.SetUnitLaborsIn result = new dfproto.BasicApi.SetUnitLaborsIn(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          change_ = java.util.Collections.unmodifiableList(change_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.change_ = change_;
        return result;
      }
      
      public Builder mergeFrom(dfproto.BasicApi.SetUnitLaborsIn other) {
        if (other == dfproto.BasicApi.SetUnitLaborsIn.getDefaultInstance()) return this;
        if (!other.change_.isEmpty()) {
          if (change_.isEmpty()) {
            change_ = other.change_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureChangeIsMutable();
            change_.addAll(other.change_);
          }
          
        }
        return this;
      }
      
      public final boolean isInitialized() {
        for (int i = 0; i < getChangeCount(); i++) {
          if (!getChange(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 10: {
              dfproto.Basic.UnitLaborState.Builder subBuilder = dfproto.Basic.UnitLaborState.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addChange(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated .dfproto.UnitLaborState change = 1;
      private java.util.List<dfproto.Basic.UnitLaborState> change_ =
        java.util.Collections.emptyList();
      private void ensureChangeIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          change_ = new java.util.ArrayList<dfproto.Basic.UnitLaborState>(change_);
          bitField0_ |= 0x00000001;
         }
      }
      
      public java.util.List<dfproto.Basic.UnitLaborState> getChangeList() {
        return java.util.Collections.unmodifiableList(change_);
      }
      public int getChangeCount() {
        return change_.size();
      }
      public dfproto.Basic.UnitLaborState getChange(int index) {
        return change_.get(index);
      }
      public Builder setChange(
          int index, dfproto.Basic.UnitLaborState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureChangeIsMutable();
        change_.set(index, value);
        
        return this;
      }
      public Builder setChange(
          int index, dfproto.Basic.UnitLaborState.Builder builderForValue) {
        ensureChangeIsMutable();
        change_.set(index, builderForValue.build());
        
        return this;
      }
      public Builder addChange(dfproto.Basic.UnitLaborState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureChangeIsMutable();
        change_.add(value);
        
        return this;
      }
      public Builder addChange(
          int index, dfproto.Basic.UnitLaborState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureChangeIsMutable();
        change_.add(index, value);
        
        return this;
      }
      public Builder addChange(
          dfproto.Basic.UnitLaborState.Builder builderForValue) {
        ensureChangeIsMutable();
        change_.add(builderForValue.build());
        
        return this;
      }
      public Builder addChange(
          int index, dfproto.Basic.UnitLaborState.Builder builderForValue) {
        ensureChangeIsMutable();
        change_.add(index, builderForValue.build());
        
        return this;
      }
      public Builder addAllChange(
          java.lang.Iterable<? extends dfproto.Basic.UnitLaborState> values) {
        ensureChangeIsMutable();
        super.addAll(values, change_);
        
        return this;
      }
      public Builder clearChange() {
        change_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        
        return this;
      }
      public Builder removeChange(int index) {
        ensureChangeIsMutable();
        change_.remove(index);
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:dfproto.SetUnitLaborsIn)
    }
    
    static {
      defaultInstance = new SetUnitLaborsIn(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:dfproto.SetUnitLaborsIn)
  }
  
  
  static {
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
